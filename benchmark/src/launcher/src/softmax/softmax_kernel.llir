; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite)
define void @softmax_kernel(ptr captures(none) %0, ptr readonly captures(none) %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10) local_unnamed_addr #0 !dbg !3 {
  %12 = mul i32 %5, %2, !dbg !6
  %13 = sext i32 %12 to i64, !dbg !7
  %14 = getelementptr float, ptr %1, i64 %13, !dbg !7
  %15 = insertelement <64 x i32> poison, i32 %4, i64 0, !dbg !8
  %16 = shufflevector <64 x i32> %15, <64 x i32> poison, <64 x i32> zeroinitializer, !dbg !8
  %17 = icmp sgt i32 %4, 0, !dbg !9
  br i1 %17, label %.lr.ph, label %._crit_edge11, !dbg !9

.lr.ph:                                           ; preds = %11, %.lr.ph
  %18 = phi float [ %29, %.lr.ph ], [ 0xFFF0000000000000, %11 ]
  %19 = phi i32 [ %30, %.lr.ph ], [ 0, %11 ]
  %20 = insertelement <64 x i32> poison, i32 %19, i64 0, !dbg !10
  %21 = shufflevector <64 x i32> %20, <64 x i32> poison, <64 x i32> zeroinitializer, !dbg !10
  %22 = or disjoint <64 x i32> %21, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>, !dbg !10
  %23 = icmp slt <64 x i32> %22, %16, !dbg !8
  %24 = sext i32 %19 to i64, !dbg !11
  %25 = getelementptr float, ptr %14, i64 %24, !dbg !11
  %26 = tail call <64 x float> @llvm.masked.load.v64f32.p0(ptr %25, i32 4, <64 x i1> %23, <64 x float> splat (float 0xFFF0000000000000)), !dbg !12
  %27 = tail call reassoc float @llvm.vector.reduce.fmax.v64f32(<64 x float> %26), !dbg !13
  %28 = tail call float @llvm.maxnum.f32(float %27, float 0xFFF0000000000000), !dbg !13
  %29 = tail call float @llvm.maxnum.f32(float %18, float %28), !dbg !17
  %30 = add i32 %19, 64, !dbg !9
  %31 = icmp slt i32 %30, %4, !dbg !9
  br i1 %31, label %.lr.ph, label %.lr.ph6.preheader, !dbg !9

.lr.ph6.preheader:                                ; preds = %.lr.ph
  %32 = mul i32 %5, %3, !dbg !18
  %33 = sext i32 %32 to i64, !dbg !19
  %34 = getelementptr float, ptr %0, i64 %33, !dbg !19
  %wide.trip.count = zext nneg i32 %4 to i64, !dbg !20
  br label %.lr.ph6, !dbg !20

.lr.ph6:                                          ; preds = %.lr.ph6.preheader, %.lr.ph6
  %indvars.iv = phi i64 [ 0, %.lr.ph6.preheader ], [ %indvars.iv.next, %.lr.ph6 ]
  %35 = phi float [ 0.000000e+00, %.lr.ph6.preheader ], [ %40, %.lr.ph6 ]
  %36 = getelementptr float, ptr %14, i64 %indvars.iv, !dbg !21
  %37 = load float, ptr %36, align 4, !dbg !22
  %38 = fsub float %37, %29, !dbg !23
  %39 = tail call float @llvm.exp.f32(float %38), !dbg !24
  %40 = fadd float %35, %39, !dbg !25
  %41 = getelementptr float, ptr %34, i64 %indvars.iv, !dbg !26
  store float %39, ptr %41, align 4, !dbg !27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !20
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !20
  br i1 %exitcond.not, label %.lr.ph10.preheader, label %.lr.ph6, !dbg !20

.lr.ph10.preheader:                               ; preds = %.lr.ph6
  %42 = insertelement <64 x float> poison, float %40, i64 0, !dbg !28
  %43 = shufflevector <64 x float> %42, <64 x float> poison, <64 x i32> zeroinitializer, !dbg !28
  br label %.lr.ph10, !dbg !29

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %.lr.ph10
  %44 = phi i32 [ %53, %.lr.ph10 ], [ 0, %.lr.ph10.preheader ]
  %45 = insertelement <64 x i32> poison, i32 %44, i64 0, !dbg !30
  %46 = shufflevector <64 x i32> %45, <64 x i32> poison, <64 x i32> zeroinitializer, !dbg !30
  %47 = or disjoint <64 x i32> %46, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>, !dbg !30
  %48 = icmp slt <64 x i32> %47, %16, !dbg !31
  %49 = sext i32 %44 to i64, !dbg !32
  %50 = getelementptr float, ptr %34, i64 %49, !dbg !32
  %51 = tail call <64 x float> @llvm.masked.load.v64f32.p0(ptr %50, i32 4, <64 x i1> %48, <64 x float> splat (float 0xFFF0000000000000)), !dbg !33
  %52 = fdiv <64 x float> %51, %43, !dbg !28
  tail call void @llvm.masked.store.v64f32.p0(<64 x float> %52, ptr %50, i32 4, <64 x i1> %48), !dbg !34
  %53 = add i32 %44, 64, !dbg !29
  %54 = icmp slt i32 %53, %4, !dbg !29
  br i1 %54, label %.lr.ph10, label %._crit_edge11, !dbg !29

._crit_edge11:                                    ; preds = %.lr.ph10, %11
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <64 x float> @llvm.masked.load.v64f32.p0(ptr captures(none), i32 immarg, <64 x i1>, <64 x float>) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.masked.store.v64f32.p0(<64 x float>, ptr captures(none), i32 immarg, <64 x i1>) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.exp.f32(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.vector.reduce.fmax.v64f32(<64 x float>) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #3

attributes #0 = { nofree norecurse nosync nounwind memory(argmem: readwrite) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "softmax.py", directory: "/home/yuhao/T_RVV/benchmark/src/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "softmax_kernel", linkageName: "softmax_kernel", scope: !1, file: !1, line: 60, type: !4, scopeLine: 60, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!4 = !DISubroutineType(cc: DW_CC_normal, types: !5)
!5 = !{}
!6 = !DILocation(line: 64, column: 42, scope: !3)
!7 = !DILocation(line: 64, column: 32, scope: !3)
!8 = !DILocation(line: 69, column: 70, scope: !3)
!9 = !DILocation(line: 67, column: 32, scope: !3)
!10 = !DILocation(line: 68, column: 28, scope: !3)
!11 = !DILocation(line: 69, column: 38, scope: !3)
!12 = !DILocation(line: 69, column: 22, scope: !3)
!13 = !DILocation(line: 184, column: 40, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !3, file: !15, discriminator: 0)
!15 = !DIFile(filename: "standard.py", directory: "/home/yuhao/triton-cpu/python/triton/language")
!16 = !DILocation(line: 70, column: 45, scope: !3)
!17 = !DILocation(line: 70, column: 38, scope: !3)
!18 = !DILocation(line: 73, column: 50, scope: !3)
!19 = !DILocation(line: 73, column: 40, scope: !3)
!20 = !DILocation(line: 75, column: 24, scope: !3)
!21 = !DILocation(line: 76, column: 38, scope: !3)
!22 = !DILocation(line: 76, column: 22, scope: !3)
!23 = !DILocation(line: 78, column: 30, scope: !3)
!24 = !DILocation(line: 80, column: 27, scope: !3)
!25 = !DILocation(line: 81, column: 23, scope: !3)
!26 = !DILocation(line: 83, column: 40, scope: !3)
!27 = !DILocation(line: 83, column: 45, scope: !3)
!28 = !DILocation(line: 91, column: 31, scope: !3)
!29 = !DILocation(line: 87, column: 32, scope: !3)
!30 = !DILocation(line: 88, column: 28, scope: !3)
!31 = !DILocation(line: 89, column: 77, scope: !3)
!32 = !DILocation(line: 89, column: 45, scope: !3)
!33 = !DILocation(line: 89, column: 22, scope: !3)
!34 = !DILocation(line: 92, column: 53, scope: !3)
!35 = !DILocation(line: 87, column: 4, scope: !3)
