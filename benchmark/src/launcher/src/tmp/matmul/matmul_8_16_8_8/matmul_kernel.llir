; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nosync nounwind
define void @matmul_kernel(ptr %0, ptr %1, ptr writeonly captures(none) %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14) local_unnamed_addr #0 !dbg !3 {
  %16 = add i32 %3, 7, !dbg !6
  %17 = sdiv i32 %16, 8, !dbg !10
  %18 = add i32 %4, 15, !dbg !11
  %19 = sdiv i32 %18, 16, !dbg !13
  %20 = shl nsw i32 %19, 3, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %.frozen88 = freeze i32 %20, !dbg !15
  %21 = sdiv i32 %.frozen, %.frozen88, !dbg !15
  %22 = shl i32 %21, 3, !dbg !16
  %23 = sub i32 %17, %22, !dbg !17
  %24 = tail call i32 @llvm.smin.i32(i32 %23, i32 8), !dbg !18
  %25 = srem i32 %9, %24, !dbg !19
  %26 = add i32 %22, %25, !dbg !20
  %27 = mul i32 %21, %.frozen88, !dbg !21
  %.decomposed = sub i32 %.frozen, %27, !dbg !21
  %28 = sdiv i32 %.decomposed, %24, !dbg !22
  %29 = shl i32 %26, 3, !dbg !23
  %30 = shl i32 %28, 4, !dbg !24
  %31 = zext i32 %29 to i64, !dbg !25
  %32 = zext i32 %30 to i64, !dbg !26
  %33 = sdiv i32 %5, 8, !dbg !27
  %34 = icmp sgt i32 %5, 7, !dbg !29
  br i1 %34, label %.lr.ph.preheader, label %._crit_edge, !dbg !29

.lr.ph.preheader:                                 ; preds = %15
  %35 = sext i32 %7 to i64, !dbg !26
  %36 = sext i32 %6 to i64, !dbg !25
  %37 = insertvalue [2 x i64] undef, i64 %31, 0, !dbg !29
  %invariant.gep = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep58 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep60 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep62 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep64 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep66 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep68 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep70 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep72 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep74 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep76 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep78 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep80 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep82 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep84 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep86 = getelementptr float, ptr %1, i64 %32, !dbg !29
  br label %.lr.ph, !dbg !29

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %38 = phi <16 x float> [ %448, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %39 = phi <16 x float> [ %447, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %40 = phi <16 x float> [ %442, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %41 = phi <16 x float> [ %437, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %42 = phi <16 x float> [ %432, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %43 = phi <16 x float> [ %427, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %44 = phi <16 x float> [ %422, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %45 = phi <16 x float> [ %417, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %.pn = phi [2 x i64] [ %451, %.lr.ph ], [ [i64 0, i64 undef], %.lr.ph.preheader ]
  %.pn32 = phi [2 x i64] [ %47, %.lr.ph ], [ %37, %.lr.ph.preheader ]
  %.pn33 = phi i64 [ %449, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %46 = phi i32 [ %450, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %47 = insertvalue [2 x i64] %.pn32, i64 %.pn33, 1, !dbg !29
  %48 = insertvalue [2 x i64] %.pn, i64 %32, 1, !dbg !29
  %49 = extractvalue [2 x i64] %.pn32, 0, !dbg !30
  %50 = extractvalue [2 x i64] %.pn, 0, !dbg !31
  %51 = add i64 %.pn33, 16, !dbg !32
  %52 = add i64 %50, 8, !dbg !32
  %53 = mul i64 %50, %35, !dbg !32
  %gep = getelementptr float, ptr %invariant.gep, i64 %53, !dbg !32
  %54 = load <16 x float>, ptr %gep, align 4, !dbg !32
  %55 = add i64 %50, 1, !dbg !32
  %56 = mul i64 %55, %35, !dbg !32
  %gep59 = getelementptr float, ptr %invariant.gep58, i64 %56, !dbg !32
  %57 = load <16 x float>, ptr %gep59, align 4, !dbg !32
  %58 = mul i64 %52, %35, !dbg !32
  %gep61 = getelementptr float, ptr %invariant.gep60, i64 %58, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep61, i32 0, i32 1, i32 1), !dbg !32
  %59 = mul i64 %49, %36, !dbg !32
  %60 = getelementptr float, ptr %0, i64 %59, !dbg !32
  %61 = getelementptr float, ptr %60, i64 %.pn33, !dbg !32
  %62 = load float, ptr %61, align 4, !dbg !32
  %63 = insertelement <16 x float> poison, float %62, i64 0, !dbg !32
  %64 = shufflevector <16 x float> %63, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %65 = add i64 %49, 1, !dbg !32
  %66 = mul i64 %65, %36, !dbg !32
  %67 = getelementptr float, ptr %0, i64 %66, !dbg !32
  %68 = getelementptr float, ptr %67, i64 %.pn33, !dbg !32
  %69 = load float, ptr %68, align 4, !dbg !32
  %70 = insertelement <16 x float> poison, float %69, i64 0, !dbg !32
  %71 = shufflevector <16 x float> %70, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %72 = getelementptr float, ptr %60, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %72, i32 0, i32 3, i32 1), !dbg !32
  %73 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %64, <16 x float> %45), !dbg !32
  %74 = add i64 %49, 2, !dbg !32
  %75 = mul i64 %74, %36, !dbg !32
  %76 = getelementptr float, ptr %0, i64 %75, !dbg !32
  %77 = getelementptr float, ptr %76, i64 %.pn33, !dbg !32
  %78 = load float, ptr %77, align 4, !dbg !32
  %79 = insertelement <16 x float> poison, float %78, i64 0, !dbg !32
  %80 = shufflevector <16 x float> %79, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %81 = getelementptr float, ptr %67, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %81, i32 0, i32 3, i32 1), !dbg !32
  %82 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %71, <16 x float> %44), !dbg !32
  %83 = add i64 %49, 3, !dbg !32
  %84 = mul i64 %83, %36, !dbg !32
  %85 = getelementptr float, ptr %0, i64 %84, !dbg !32
  %86 = getelementptr float, ptr %85, i64 %.pn33, !dbg !32
  %87 = load float, ptr %86, align 4, !dbg !32
  %88 = insertelement <16 x float> poison, float %87, i64 0, !dbg !32
  %89 = shufflevector <16 x float> %88, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %90 = getelementptr float, ptr %76, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %90, i32 0, i32 3, i32 1), !dbg !32
  %91 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %80, <16 x float> %43), !dbg !32
  %92 = add i64 %49, 4, !dbg !32
  %93 = mul i64 %92, %36, !dbg !32
  %94 = getelementptr float, ptr %0, i64 %93, !dbg !32
  %95 = getelementptr float, ptr %94, i64 %.pn33, !dbg !32
  %96 = load float, ptr %95, align 4, !dbg !32
  %97 = insertelement <16 x float> poison, float %96, i64 0, !dbg !32
  %98 = shufflevector <16 x float> %97, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %99 = getelementptr float, ptr %85, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %99, i32 0, i32 3, i32 1), !dbg !32
  %100 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %89, <16 x float> %42), !dbg !32
  %101 = add i64 %49, 5, !dbg !32
  %102 = mul i64 %101, %36, !dbg !32
  %103 = getelementptr float, ptr %0, i64 %102, !dbg !32
  %104 = getelementptr float, ptr %103, i64 %.pn33, !dbg !32
  %105 = load float, ptr %104, align 4, !dbg !32
  %106 = insertelement <16 x float> poison, float %105, i64 0, !dbg !32
  %107 = shufflevector <16 x float> %106, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %108 = getelementptr float, ptr %94, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %108, i32 0, i32 3, i32 1), !dbg !32
  %109 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %98, <16 x float> %41), !dbg !32
  %110 = add i64 %49, 6, !dbg !32
  %111 = mul i64 %110, %36, !dbg !32
  %112 = getelementptr float, ptr %0, i64 %111, !dbg !32
  %113 = getelementptr float, ptr %112, i64 %.pn33, !dbg !32
  %114 = load float, ptr %113, align 4, !dbg !32
  %115 = insertelement <16 x float> poison, float %114, i64 0, !dbg !32
  %116 = shufflevector <16 x float> %115, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %117 = getelementptr float, ptr %103, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %117, i32 0, i32 3, i32 1), !dbg !32
  %118 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %107, <16 x float> %40), !dbg !32
  %119 = add i64 %49, 7, !dbg !32
  %120 = mul i64 %119, %36, !dbg !32
  %121 = getelementptr float, ptr %0, i64 %120, !dbg !32
  %122 = getelementptr float, ptr %121, i64 %.pn33, !dbg !32
  %123 = load float, ptr %122, align 4, !dbg !32
  %124 = insertelement <16 x float> poison, float %123, i64 0, !dbg !32
  %125 = shufflevector <16 x float> %124, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %126 = getelementptr float, ptr %112, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %126, i32 0, i32 3, i32 1), !dbg !32
  %127 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %116, <16 x float> %39), !dbg !32
  %128 = getelementptr float, ptr %121, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %128, i32 0, i32 3, i32 1), !dbg !32
  %129 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %54, <16 x float> %125, <16 x float> %38), !dbg !32
  %130 = add i64 %50, 2, !dbg !32
  %131 = mul i64 %130, %35, !dbg !32
  %gep63 = getelementptr float, ptr %invariant.gep62, i64 %131, !dbg !32
  %132 = load <16 x float>, ptr %gep63, align 4, !dbg !32
  %133 = add i64 %50, 9, !dbg !32
  %134 = mul i64 %133, %35, !dbg !32
  %gep65 = getelementptr float, ptr %invariant.gep64, i64 %134, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep65, i32 0, i32 1, i32 1), !dbg !32
  %135 = or disjoint i64 %.pn33, 1, !dbg !32
  %136 = getelementptr float, ptr %60, i64 %135, !dbg !32
  %137 = load float, ptr %136, align 4, !dbg !32
  %138 = insertelement <16 x float> poison, float %137, i64 0, !dbg !32
  %139 = shufflevector <16 x float> %138, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %140 = getelementptr float, ptr %67, i64 %135, !dbg !32
  %141 = load float, ptr %140, align 4, !dbg !32
  %142 = insertelement <16 x float> poison, float %141, i64 0, !dbg !32
  %143 = shufflevector <16 x float> %142, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %144 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %139, <16 x float> %73), !dbg !32
  %145 = getelementptr float, ptr %76, i64 %135, !dbg !32
  %146 = load float, ptr %145, align 4, !dbg !32
  %147 = insertelement <16 x float> poison, float %146, i64 0, !dbg !32
  %148 = shufflevector <16 x float> %147, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %149 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %143, <16 x float> %82), !dbg !32
  %150 = getelementptr float, ptr %85, i64 %135, !dbg !32
  %151 = load float, ptr %150, align 4, !dbg !32
  %152 = insertelement <16 x float> poison, float %151, i64 0, !dbg !32
  %153 = shufflevector <16 x float> %152, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %154 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %148, <16 x float> %91), !dbg !32
  %155 = getelementptr float, ptr %94, i64 %135, !dbg !32
  %156 = load float, ptr %155, align 4, !dbg !32
  %157 = insertelement <16 x float> poison, float %156, i64 0, !dbg !32
  %158 = shufflevector <16 x float> %157, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %159 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %153, <16 x float> %100), !dbg !32
  %160 = getelementptr float, ptr %103, i64 %135, !dbg !32
  %161 = load float, ptr %160, align 4, !dbg !32
  %162 = insertelement <16 x float> poison, float %161, i64 0, !dbg !32
  %163 = shufflevector <16 x float> %162, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %164 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %158, <16 x float> %109), !dbg !32
  %165 = getelementptr float, ptr %112, i64 %135, !dbg !32
  %166 = load float, ptr %165, align 4, !dbg !32
  %167 = insertelement <16 x float> poison, float %166, i64 0, !dbg !32
  %168 = shufflevector <16 x float> %167, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %169 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %163, <16 x float> %118), !dbg !32
  %170 = getelementptr float, ptr %121, i64 %135, !dbg !32
  %171 = load float, ptr %170, align 4, !dbg !32
  %172 = insertelement <16 x float> poison, float %171, i64 0, !dbg !32
  %173 = shufflevector <16 x float> %172, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %174 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %168, <16 x float> %127), !dbg !32
  %175 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %57, <16 x float> %173, <16 x float> %129), !dbg !32
  %176 = add i64 %50, 3, !dbg !32
  %177 = mul i64 %176, %35, !dbg !32
  %gep67 = getelementptr float, ptr %invariant.gep66, i64 %177, !dbg !32
  %178 = load <16 x float>, ptr %gep67, align 4, !dbg !32
  %179 = add i64 %50, 10, !dbg !32
  %180 = mul i64 %179, %35, !dbg !32
  %gep69 = getelementptr float, ptr %invariant.gep68, i64 %180, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep69, i32 0, i32 1, i32 1), !dbg !32
  %181 = or disjoint i64 %.pn33, 2, !dbg !32
  %182 = getelementptr float, ptr %60, i64 %181, !dbg !32
  %183 = load float, ptr %182, align 4, !dbg !32
  %184 = insertelement <16 x float> poison, float %183, i64 0, !dbg !32
  %185 = shufflevector <16 x float> %184, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %186 = getelementptr float, ptr %67, i64 %181, !dbg !32
  %187 = load float, ptr %186, align 4, !dbg !32
  %188 = insertelement <16 x float> poison, float %187, i64 0, !dbg !32
  %189 = shufflevector <16 x float> %188, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %190 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %185, <16 x float> %144), !dbg !32
  %191 = getelementptr float, ptr %76, i64 %181, !dbg !32
  %192 = load float, ptr %191, align 4, !dbg !32
  %193 = insertelement <16 x float> poison, float %192, i64 0, !dbg !32
  %194 = shufflevector <16 x float> %193, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %195 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %189, <16 x float> %149), !dbg !32
  %196 = getelementptr float, ptr %85, i64 %181, !dbg !32
  %197 = load float, ptr %196, align 4, !dbg !32
  %198 = insertelement <16 x float> poison, float %197, i64 0, !dbg !32
  %199 = shufflevector <16 x float> %198, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %200 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %194, <16 x float> %154), !dbg !32
  %201 = getelementptr float, ptr %94, i64 %181, !dbg !32
  %202 = load float, ptr %201, align 4, !dbg !32
  %203 = insertelement <16 x float> poison, float %202, i64 0, !dbg !32
  %204 = shufflevector <16 x float> %203, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %205 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %199, <16 x float> %159), !dbg !32
  %206 = getelementptr float, ptr %103, i64 %181, !dbg !32
  %207 = load float, ptr %206, align 4, !dbg !32
  %208 = insertelement <16 x float> poison, float %207, i64 0, !dbg !32
  %209 = shufflevector <16 x float> %208, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %210 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %204, <16 x float> %164), !dbg !32
  %211 = getelementptr float, ptr %112, i64 %181, !dbg !32
  %212 = load float, ptr %211, align 4, !dbg !32
  %213 = insertelement <16 x float> poison, float %212, i64 0, !dbg !32
  %214 = shufflevector <16 x float> %213, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %215 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %209, <16 x float> %169), !dbg !32
  %216 = getelementptr float, ptr %121, i64 %181, !dbg !32
  %217 = load float, ptr %216, align 4, !dbg !32
  %218 = insertelement <16 x float> poison, float %217, i64 0, !dbg !32
  %219 = shufflevector <16 x float> %218, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %220 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %214, <16 x float> %174), !dbg !32
  %221 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %132, <16 x float> %219, <16 x float> %175), !dbg !32
  %222 = add i64 %50, 4, !dbg !32
  %223 = mul i64 %222, %35, !dbg !32
  %gep71 = getelementptr float, ptr %invariant.gep70, i64 %223, !dbg !32
  %224 = load <16 x float>, ptr %gep71, align 4, !dbg !32
  %225 = add i64 %50, 11, !dbg !32
  %226 = mul i64 %225, %35, !dbg !32
  %gep73 = getelementptr float, ptr %invariant.gep72, i64 %226, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep73, i32 0, i32 1, i32 1), !dbg !32
  %227 = or disjoint i64 %.pn33, 3, !dbg !32
  %228 = getelementptr float, ptr %60, i64 %227, !dbg !32
  %229 = load float, ptr %228, align 4, !dbg !32
  %230 = insertelement <16 x float> poison, float %229, i64 0, !dbg !32
  %231 = shufflevector <16 x float> %230, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %232 = getelementptr float, ptr %67, i64 %227, !dbg !32
  %233 = load float, ptr %232, align 4, !dbg !32
  %234 = insertelement <16 x float> poison, float %233, i64 0, !dbg !32
  %235 = shufflevector <16 x float> %234, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %236 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %231, <16 x float> %190), !dbg !32
  %237 = getelementptr float, ptr %76, i64 %227, !dbg !32
  %238 = load float, ptr %237, align 4, !dbg !32
  %239 = insertelement <16 x float> poison, float %238, i64 0, !dbg !32
  %240 = shufflevector <16 x float> %239, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %241 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %235, <16 x float> %195), !dbg !32
  %242 = getelementptr float, ptr %85, i64 %227, !dbg !32
  %243 = load float, ptr %242, align 4, !dbg !32
  %244 = insertelement <16 x float> poison, float %243, i64 0, !dbg !32
  %245 = shufflevector <16 x float> %244, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %246 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %240, <16 x float> %200), !dbg !32
  %247 = getelementptr float, ptr %94, i64 %227, !dbg !32
  %248 = load float, ptr %247, align 4, !dbg !32
  %249 = insertelement <16 x float> poison, float %248, i64 0, !dbg !32
  %250 = shufflevector <16 x float> %249, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %251 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %245, <16 x float> %205), !dbg !32
  %252 = getelementptr float, ptr %103, i64 %227, !dbg !32
  %253 = load float, ptr %252, align 4, !dbg !32
  %254 = insertelement <16 x float> poison, float %253, i64 0, !dbg !32
  %255 = shufflevector <16 x float> %254, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %256 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %250, <16 x float> %210), !dbg !32
  %257 = getelementptr float, ptr %112, i64 %227, !dbg !32
  %258 = load float, ptr %257, align 4, !dbg !32
  %259 = insertelement <16 x float> poison, float %258, i64 0, !dbg !32
  %260 = shufflevector <16 x float> %259, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %261 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %255, <16 x float> %215), !dbg !32
  %262 = getelementptr float, ptr %121, i64 %227, !dbg !32
  %263 = load float, ptr %262, align 4, !dbg !32
  %264 = insertelement <16 x float> poison, float %263, i64 0, !dbg !32
  %265 = shufflevector <16 x float> %264, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %266 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %260, <16 x float> %220), !dbg !32
  %267 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %178, <16 x float> %265, <16 x float> %221), !dbg !32
  %268 = add i64 %50, 5, !dbg !32
  %269 = mul i64 %268, %35, !dbg !32
  %gep75 = getelementptr float, ptr %invariant.gep74, i64 %269, !dbg !32
  %270 = load <16 x float>, ptr %gep75, align 4, !dbg !32
  %271 = add i64 %50, 12, !dbg !32
  %272 = mul i64 %271, %35, !dbg !32
  %gep77 = getelementptr float, ptr %invariant.gep76, i64 %272, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep77, i32 0, i32 1, i32 1), !dbg !32
  %273 = or disjoint i64 %.pn33, 4, !dbg !32
  %274 = getelementptr float, ptr %60, i64 %273, !dbg !32
  %275 = load float, ptr %274, align 4, !dbg !32
  %276 = insertelement <16 x float> poison, float %275, i64 0, !dbg !32
  %277 = shufflevector <16 x float> %276, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %278 = getelementptr float, ptr %67, i64 %273, !dbg !32
  %279 = load float, ptr %278, align 4, !dbg !32
  %280 = insertelement <16 x float> poison, float %279, i64 0, !dbg !32
  %281 = shufflevector <16 x float> %280, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %282 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %277, <16 x float> %236), !dbg !32
  %283 = getelementptr float, ptr %76, i64 %273, !dbg !32
  %284 = load float, ptr %283, align 4, !dbg !32
  %285 = insertelement <16 x float> poison, float %284, i64 0, !dbg !32
  %286 = shufflevector <16 x float> %285, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %287 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %281, <16 x float> %241), !dbg !32
  %288 = getelementptr float, ptr %85, i64 %273, !dbg !32
  %289 = load float, ptr %288, align 4, !dbg !32
  %290 = insertelement <16 x float> poison, float %289, i64 0, !dbg !32
  %291 = shufflevector <16 x float> %290, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %292 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %286, <16 x float> %246), !dbg !32
  %293 = getelementptr float, ptr %94, i64 %273, !dbg !32
  %294 = load float, ptr %293, align 4, !dbg !32
  %295 = insertelement <16 x float> poison, float %294, i64 0, !dbg !32
  %296 = shufflevector <16 x float> %295, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %297 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %291, <16 x float> %251), !dbg !32
  %298 = getelementptr float, ptr %103, i64 %273, !dbg !32
  %299 = load float, ptr %298, align 4, !dbg !32
  %300 = insertelement <16 x float> poison, float %299, i64 0, !dbg !32
  %301 = shufflevector <16 x float> %300, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %302 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %296, <16 x float> %256), !dbg !32
  %303 = getelementptr float, ptr %112, i64 %273, !dbg !32
  %304 = load float, ptr %303, align 4, !dbg !32
  %305 = insertelement <16 x float> poison, float %304, i64 0, !dbg !32
  %306 = shufflevector <16 x float> %305, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %307 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %301, <16 x float> %261), !dbg !32
  %308 = getelementptr float, ptr %121, i64 %273, !dbg !32
  %309 = load float, ptr %308, align 4, !dbg !32
  %310 = insertelement <16 x float> poison, float %309, i64 0, !dbg !32
  %311 = shufflevector <16 x float> %310, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %312 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %306, <16 x float> %266), !dbg !32
  %313 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %224, <16 x float> %311, <16 x float> %267), !dbg !32
  %314 = add i64 %50, 6, !dbg !32
  %315 = mul i64 %314, %35, !dbg !32
  %gep79 = getelementptr float, ptr %invariant.gep78, i64 %315, !dbg !32
  %316 = load <16 x float>, ptr %gep79, align 4, !dbg !32
  %317 = add i64 %50, 13, !dbg !32
  %318 = mul i64 %317, %35, !dbg !32
  %gep81 = getelementptr float, ptr %invariant.gep80, i64 %318, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep81, i32 0, i32 1, i32 1), !dbg !32
  %319 = or disjoint i64 %.pn33, 5, !dbg !32
  %320 = getelementptr float, ptr %60, i64 %319, !dbg !32
  %321 = load float, ptr %320, align 4, !dbg !32
  %322 = insertelement <16 x float> poison, float %321, i64 0, !dbg !32
  %323 = shufflevector <16 x float> %322, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %324 = getelementptr float, ptr %67, i64 %319, !dbg !32
  %325 = load float, ptr %324, align 4, !dbg !32
  %326 = insertelement <16 x float> poison, float %325, i64 0, !dbg !32
  %327 = shufflevector <16 x float> %326, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %328 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %323, <16 x float> %282), !dbg !32
  %329 = getelementptr float, ptr %76, i64 %319, !dbg !32
  %330 = load float, ptr %329, align 4, !dbg !32
  %331 = insertelement <16 x float> poison, float %330, i64 0, !dbg !32
  %332 = shufflevector <16 x float> %331, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %333 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %327, <16 x float> %287), !dbg !32
  %334 = getelementptr float, ptr %85, i64 %319, !dbg !32
  %335 = load float, ptr %334, align 4, !dbg !32
  %336 = insertelement <16 x float> poison, float %335, i64 0, !dbg !32
  %337 = shufflevector <16 x float> %336, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %338 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %332, <16 x float> %292), !dbg !32
  %339 = getelementptr float, ptr %94, i64 %319, !dbg !32
  %340 = load float, ptr %339, align 4, !dbg !32
  %341 = insertelement <16 x float> poison, float %340, i64 0, !dbg !32
  %342 = shufflevector <16 x float> %341, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %343 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %337, <16 x float> %297), !dbg !32
  %344 = getelementptr float, ptr %103, i64 %319, !dbg !32
  %345 = load float, ptr %344, align 4, !dbg !32
  %346 = insertelement <16 x float> poison, float %345, i64 0, !dbg !32
  %347 = shufflevector <16 x float> %346, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %348 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %342, <16 x float> %302), !dbg !32
  %349 = getelementptr float, ptr %112, i64 %319, !dbg !32
  %350 = load float, ptr %349, align 4, !dbg !32
  %351 = insertelement <16 x float> poison, float %350, i64 0, !dbg !32
  %352 = shufflevector <16 x float> %351, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %353 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %347, <16 x float> %307), !dbg !32
  %354 = getelementptr float, ptr %121, i64 %319, !dbg !32
  %355 = load float, ptr %354, align 4, !dbg !32
  %356 = insertelement <16 x float> poison, float %355, i64 0, !dbg !32
  %357 = shufflevector <16 x float> %356, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %358 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %352, <16 x float> %312), !dbg !32
  %359 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %270, <16 x float> %357, <16 x float> %313), !dbg !32
  %360 = add i64 %50, 7, !dbg !32
  %361 = mul i64 %360, %35, !dbg !32
  %gep83 = getelementptr float, ptr %invariant.gep82, i64 %361, !dbg !32
  %362 = load <16 x float>, ptr %gep83, align 4, !dbg !32
  %363 = add i64 %50, 14, !dbg !32
  %364 = mul i64 %363, %35, !dbg !32
  %gep85 = getelementptr float, ptr %invariant.gep84, i64 %364, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep85, i32 0, i32 1, i32 1), !dbg !32
  %365 = or disjoint i64 %.pn33, 6, !dbg !32
  %366 = getelementptr float, ptr %60, i64 %365, !dbg !32
  %367 = load float, ptr %366, align 4, !dbg !32
  %368 = insertelement <16 x float> poison, float %367, i64 0, !dbg !32
  %369 = shufflevector <16 x float> %368, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %370 = getelementptr float, ptr %67, i64 %365, !dbg !32
  %371 = load float, ptr %370, align 4, !dbg !32
  %372 = insertelement <16 x float> poison, float %371, i64 0, !dbg !32
  %373 = shufflevector <16 x float> %372, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %374 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %369, <16 x float> %328), !dbg !32
  %375 = getelementptr float, ptr %76, i64 %365, !dbg !32
  %376 = load float, ptr %375, align 4, !dbg !32
  %377 = insertelement <16 x float> poison, float %376, i64 0, !dbg !32
  %378 = shufflevector <16 x float> %377, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %379 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %373, <16 x float> %333), !dbg !32
  %380 = getelementptr float, ptr %85, i64 %365, !dbg !32
  %381 = load float, ptr %380, align 4, !dbg !32
  %382 = insertelement <16 x float> poison, float %381, i64 0, !dbg !32
  %383 = shufflevector <16 x float> %382, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %384 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %378, <16 x float> %338), !dbg !32
  %385 = getelementptr float, ptr %94, i64 %365, !dbg !32
  %386 = load float, ptr %385, align 4, !dbg !32
  %387 = insertelement <16 x float> poison, float %386, i64 0, !dbg !32
  %388 = shufflevector <16 x float> %387, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %389 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %383, <16 x float> %343), !dbg !32
  %390 = getelementptr float, ptr %103, i64 %365, !dbg !32
  %391 = load float, ptr %390, align 4, !dbg !32
  %392 = insertelement <16 x float> poison, float %391, i64 0, !dbg !32
  %393 = shufflevector <16 x float> %392, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %394 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %388, <16 x float> %348), !dbg !32
  %395 = getelementptr float, ptr %112, i64 %365, !dbg !32
  %396 = load float, ptr %395, align 4, !dbg !32
  %397 = insertelement <16 x float> poison, float %396, i64 0, !dbg !32
  %398 = shufflevector <16 x float> %397, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %399 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %393, <16 x float> %353), !dbg !32
  %400 = getelementptr float, ptr %121, i64 %365, !dbg !32
  %401 = load float, ptr %400, align 4, !dbg !32
  %402 = insertelement <16 x float> poison, float %401, i64 0, !dbg !32
  %403 = shufflevector <16 x float> %402, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %404 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %398, <16 x float> %358), !dbg !32
  %405 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %316, <16 x float> %403, <16 x float> %359), !dbg !32
  %406 = add i64 %50, 15, !dbg !32
  %407 = mul i64 %406, %35, !dbg !32
  %gep87 = getelementptr float, ptr %invariant.gep86, i64 %407, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep87, i32 0, i32 1, i32 1), !dbg !32
  %408 = or disjoint i64 %.pn33, 7, !dbg !32
  %409 = getelementptr float, ptr %60, i64 %408, !dbg !32
  %410 = load float, ptr %409, align 4, !dbg !32
  %411 = insertelement <16 x float> poison, float %410, i64 0, !dbg !32
  %412 = shufflevector <16 x float> %411, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %413 = getelementptr float, ptr %67, i64 %408, !dbg !32
  %414 = load float, ptr %413, align 4, !dbg !32
  %415 = insertelement <16 x float> poison, float %414, i64 0, !dbg !32
  %416 = shufflevector <16 x float> %415, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %417 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %412, <16 x float> %374), !dbg !32
  %418 = getelementptr float, ptr %76, i64 %408, !dbg !32
  %419 = load float, ptr %418, align 4, !dbg !32
  %420 = insertelement <16 x float> poison, float %419, i64 0, !dbg !32
  %421 = shufflevector <16 x float> %420, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %422 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %416, <16 x float> %379), !dbg !32
  %423 = getelementptr float, ptr %85, i64 %408, !dbg !32
  %424 = load float, ptr %423, align 4, !dbg !32
  %425 = insertelement <16 x float> poison, float %424, i64 0, !dbg !32
  %426 = shufflevector <16 x float> %425, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %427 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %421, <16 x float> %384), !dbg !32
  %428 = getelementptr float, ptr %94, i64 %408, !dbg !32
  %429 = load float, ptr %428, align 4, !dbg !32
  %430 = insertelement <16 x float> poison, float %429, i64 0, !dbg !32
  %431 = shufflevector <16 x float> %430, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %432 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %426, <16 x float> %389), !dbg !32
  %433 = getelementptr float, ptr %103, i64 %408, !dbg !32
  %434 = load float, ptr %433, align 4, !dbg !32
  %435 = insertelement <16 x float> poison, float %434, i64 0, !dbg !32
  %436 = shufflevector <16 x float> %435, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %437 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %431, <16 x float> %394), !dbg !32
  %438 = getelementptr float, ptr %112, i64 %408, !dbg !32
  %439 = load float, ptr %438, align 4, !dbg !32
  %440 = insertelement <16 x float> poison, float %439, i64 0, !dbg !32
  %441 = shufflevector <16 x float> %440, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %442 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %436, <16 x float> %399), !dbg !32
  %443 = getelementptr float, ptr %121, i64 %408, !dbg !32
  %444 = load float, ptr %443, align 4, !dbg !32
  %445 = insertelement <16 x float> poison, float %444, i64 0, !dbg !32
  %446 = shufflevector <16 x float> %445, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !32
  %447 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %441, <16 x float> %404), !dbg !32
  %448 = tail call <16 x float> @llvm.fmuladd.v16f32(<16 x float> %362, <16 x float> %446, <16 x float> %405), !dbg !32
  %449 = add i64 %.pn33, 8, !dbg !33
  %450 = add nuw nsw i32 %46, 1, !dbg !29
  %exitcond.not = icmp eq i32 %450, %33, !dbg !29
  %451 = insertvalue [2 x i64] %48, i64 %52, 0, !dbg !29
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !dbg !29

._crit_edge:                                      ; preds = %.lr.ph, %15
  %.lcssa7 = phi <16 x float> [ zeroinitializer, %15 ], [ %417, %.lr.ph ]
  %.lcssa6 = phi <16 x float> [ zeroinitializer, %15 ], [ %422, %.lr.ph ]
  %.lcssa5 = phi <16 x float> [ zeroinitializer, %15 ], [ %427, %.lr.ph ]
  %.lcssa4 = phi <16 x float> [ zeroinitializer, %15 ], [ %432, %.lr.ph ]
  %.lcssa3 = phi <16 x float> [ zeroinitializer, %15 ], [ %437, %.lr.ph ]
  %.lcssa2 = phi <16 x float> [ zeroinitializer, %15 ], [ %442, %.lr.ph ]
  %.lcssa1 = phi <16 x float> [ zeroinitializer, %15 ], [ %447, %.lr.ph ]
  %.lcssa = phi <16 x float> [ zeroinitializer, %15 ], [ %448, %.lr.ph ]
  %452 = sext i32 %8 to i64, !dbg !34
  %453 = mul nsw i64 %31, %452, !dbg !35
  %454 = getelementptr float, ptr %2, i64 %453, !dbg !35
  %455 = getelementptr float, ptr %454, i64 %32, !dbg !35
  store <16 x float> %.lcssa7, ptr %455, align 4, !dbg !35
  %456 = or disjoint i64 %31, 1, !dbg !35
  %457 = mul nsw i64 %456, %452, !dbg !35
  %458 = getelementptr float, ptr %2, i64 %457, !dbg !35
  %459 = getelementptr float, ptr %458, i64 %32, !dbg !35
  store <16 x float> %.lcssa6, ptr %459, align 4, !dbg !35
  %460 = or disjoint i64 %31, 2, !dbg !35
  %461 = mul nsw i64 %460, %452, !dbg !35
  %462 = getelementptr float, ptr %2, i64 %461, !dbg !35
  %463 = getelementptr float, ptr %462, i64 %32, !dbg !35
  store <16 x float> %.lcssa5, ptr %463, align 4, !dbg !35
  %464 = or disjoint i64 %31, 3, !dbg !35
  %465 = mul nsw i64 %464, %452, !dbg !35
  %466 = getelementptr float, ptr %2, i64 %465, !dbg !35
  %467 = getelementptr float, ptr %466, i64 %32, !dbg !35
  store <16 x float> %.lcssa4, ptr %467, align 4, !dbg !35
  %468 = or disjoint i64 %31, 4, !dbg !35
  %469 = mul nsw i64 %468, %452, !dbg !35
  %470 = getelementptr float, ptr %2, i64 %469, !dbg !35
  %471 = getelementptr float, ptr %470, i64 %32, !dbg !35
  store <16 x float> %.lcssa3, ptr %471, align 4, !dbg !35
  %472 = or disjoint i64 %31, 5, !dbg !35
  %473 = mul nsw i64 %472, %452, !dbg !35
  %474 = getelementptr float, ptr %2, i64 %473, !dbg !35
  %475 = getelementptr float, ptr %474, i64 %32, !dbg !35
  store <16 x float> %.lcssa2, ptr %475, align 4, !dbg !35
  %476 = or disjoint i64 %31, 6, !dbg !35
  %477 = mul nsw i64 %476, %452, !dbg !35
  %478 = getelementptr float, ptr %2, i64 %477, !dbg !35
  %479 = getelementptr float, ptr %478, i64 %32, !dbg !35
  store <16 x float> %.lcssa1, ptr %479, align 4, !dbg !35
  %480 = or disjoint i64 %31, 7, !dbg !35
  %481 = mul nsw i64 %480, %452, !dbg !35
  %482 = getelementptr float, ptr %2, i64 %481, !dbg !35
  %483 = getelementptr float, ptr %482, i64 %32, !dbg !35
  store <16 x float> %.lcssa, ptr %483, align 4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @llvm.prefetch.p0(ptr readonly captures(none), i32 immarg, i32 immarg, i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <16 x float> @llvm.fmuladd.v16f32(<16 x float>, <16 x float>, <16 x float>) #1

attributes #0 = { nofree norecurse nosync nounwind }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "matmul.py", directory: "/home/yuhao/T_RVV/benchmark/src/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "matmul_kernel", linkageName: "matmul_kernel", scope: !1, file: !1, line: 24, type: !4, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!4 = !DISubroutineType(cc: DW_CC_normal, types: !5)
!5 = !{}
!6 = !DILocation(line: 40, column: 22, scope: !7, inlinedAt: !9)
!7 = distinct !DILexicalBlockFile(scope: !3, file: !8, discriminator: 0)
!8 = !DIFile(filename: "standard.py", directory: "/home/yuhao/triton-cpu/python/triton/language")
!9 = !DILocation(line: 46, column: 27, scope: !3)
!10 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !9)
!11 = !DILocation(line: 40, column: 22, scope: !7, inlinedAt: !12)
!12 = !DILocation(line: 47, column: 27, scope: !3)
!13 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !12)
!14 = !DILocation(line: 48, column: 38, scope: !3)
!15 = !DILocation(line: 49, column: 22, scope: !3)
!16 = !DILocation(line: 50, column: 29, scope: !3)
!17 = !DILocation(line: 51, column: 35, scope: !3)
!18 = !DILocation(line: 51, column: 48, scope: !3)
!19 = !DILocation(line: 52, column: 33, scope: !3)
!20 = !DILocation(line: 52, column: 27, scope: !3)
!21 = !DILocation(line: 53, column: 19, scope: !3)
!22 = !DILocation(line: 53, column: 40, scope: !3)
!23 = !DILocation(line: 63, column: 33, scope: !3)
!24 = !DILocation(line: 64, column: 33, scope: !3)
!25 = !DILocation(line: 67, column: 39, scope: !3)
!26 = !DILocation(line: 70, column: 39, scope: !3)
!27 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !28)
!28 = !DILocation(line: 79, column: 33, scope: !3)
!29 = !DILocation(line: 79, column: 22, scope: !3)
!30 = !DILocation(line: 83, column: 20, scope: !3)
!31 = !DILocation(line: 84, column: 20, scope: !3)
!32 = !DILocation(line: 86, column: 35, scope: !3)
!33 = !DILocation(line: 89, column: 48, scope: !3)
!34 = !DILocation(line: 102, column: 81, scope: !3)
!35 = !DILocation(line: 103, column: 29, scope: !3)
!36 = !DILocation(line: 99, column: 4, scope: !3)
