; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nosync nounwind
define void @matmul_kernel(ptr %0, ptr %1, ptr writeonly captures(none) %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14) local_unnamed_addr #0 !dbg !3 {
  %16 = add i32 %3, 3, !dbg !6
  %17 = sdiv i32 %16, 4, !dbg !10
  %18 = add i32 %4, 7, !dbg !11
  %19 = sdiv i32 %18, 8, !dbg !13
  %20 = shl nsw i32 %19, 3, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %.frozen92 = freeze i32 %20, !dbg !15
  %21 = sdiv i32 %.frozen, %.frozen92, !dbg !15
  %22 = shl i32 %21, 3, !dbg !16
  %23 = sub i32 %17, %22, !dbg !17
  %24 = tail call i32 @llvm.smin.i32(i32 %23, i32 8), !dbg !18
  %25 = srem i32 %9, %24, !dbg !19
  %26 = add i32 %22, %25, !dbg !20
  %27 = mul i32 %21, %.frozen92, !dbg !21
  %.decomposed = sub i32 %.frozen, %27, !dbg !21
  %28 = sdiv i32 %.decomposed, %24, !dbg !22
  %29 = shl i32 %26, 2, !dbg !23
  %30 = shl i32 %28, 3, !dbg !24
  %31 = zext i32 %29 to i64, !dbg !25
  %32 = zext i32 %30 to i64, !dbg !26
  %33 = sdiv i32 %5, 16, !dbg !27
  %34 = icmp sgt i32 %5, 15, !dbg !29
  br i1 %34, label %.lr.ph.preheader, label %._crit_edge, !dbg !29

.lr.ph.preheader:                                 ; preds = %15
  %35 = sext i32 %7 to i64, !dbg !26
  %36 = sext i32 %6 to i64, !dbg !25
  %37 = insertvalue [2 x i64] undef, i64 %31, 0, !dbg !29
  %invariant.gep = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep30 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep32 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep34 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep36 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep38 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep40 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep42 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep44 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep46 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep48 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep50 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep52 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep54 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep56 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep58 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep60 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep62 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep64 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep66 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep68 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep70 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep72 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep74 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep76 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep78 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep80 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep82 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep84 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep86 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep88 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep90 = getelementptr float, ptr %1, i64 %32, !dbg !29
  br label %.lr.ph, !dbg !29

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %38 = phi <8 x float> [ %481, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %39 = phi <8 x float> [ %480, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %40 = phi <8 x float> [ %475, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %41 = phi <8 x float> [ %470, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %.pn = phi [2 x i64] [ %484, %.lr.ph ], [ [i64 0, i64 undef], %.lr.ph.preheader ]
  %.pn16 = phi [2 x i64] [ %43, %.lr.ph ], [ %37, %.lr.ph.preheader ]
  %.pn17 = phi i64 [ %482, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %42 = phi i32 [ %483, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %43 = insertvalue [2 x i64] %.pn16, i64 %.pn17, 1, !dbg !29
  %44 = insertvalue [2 x i64] %.pn, i64 %32, 1, !dbg !29
  %45 = extractvalue [2 x i64] %.pn16, 0, !dbg !30
  %46 = extractvalue [2 x i64] %.pn, 0, !dbg !31
  %47 = add i64 %.pn17, 32, !dbg !32
  %48 = add i64 %46, 16, !dbg !32
  %49 = mul i64 %46, %35, !dbg !32
  %gep = getelementptr float, ptr %invariant.gep, i64 %49, !dbg !32
  %50 = load <8 x float>, ptr %gep, align 4, !dbg !32
  %51 = add i64 %46, 1, !dbg !32
  %52 = mul i64 %51, %35, !dbg !32
  %gep31 = getelementptr float, ptr %invariant.gep30, i64 %52, !dbg !32
  %53 = load <8 x float>, ptr %gep31, align 4, !dbg !32
  %54 = mul i64 %48, %35, !dbg !32
  %gep33 = getelementptr float, ptr %invariant.gep32, i64 %54, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep33, i32 0, i32 1, i32 1), !dbg !32
  %55 = mul i64 %45, %36, !dbg !32
  %56 = getelementptr float, ptr %0, i64 %55, !dbg !32
  %57 = getelementptr float, ptr %56, i64 %.pn17, !dbg !32
  %58 = load float, ptr %57, align 4, !dbg !32
  %59 = insertelement <8 x float> poison, float %58, i64 0, !dbg !32
  %60 = shufflevector <8 x float> %59, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %61 = add i64 %45, 1, !dbg !32
  %62 = mul i64 %61, %36, !dbg !32
  %63 = getelementptr float, ptr %0, i64 %62, !dbg !32
  %64 = getelementptr float, ptr %63, i64 %.pn17, !dbg !32
  %65 = load float, ptr %64, align 4, !dbg !32
  %66 = insertelement <8 x float> poison, float %65, i64 0, !dbg !32
  %67 = shufflevector <8 x float> %66, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %68 = getelementptr float, ptr %56, i64 %47, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %68, i32 0, i32 3, i32 1), !dbg !32
  %69 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %50, <8 x float> %60, <8 x float> %41), !dbg !32
  %70 = add i64 %45, 2, !dbg !32
  %71 = mul i64 %70, %36, !dbg !32
  %72 = getelementptr float, ptr %0, i64 %71, !dbg !32
  %73 = getelementptr float, ptr %72, i64 %.pn17, !dbg !32
  %74 = load float, ptr %73, align 4, !dbg !32
  %75 = insertelement <8 x float> poison, float %74, i64 0, !dbg !32
  %76 = shufflevector <8 x float> %75, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %77 = getelementptr float, ptr %63, i64 %47, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %77, i32 0, i32 3, i32 1), !dbg !32
  %78 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %50, <8 x float> %67, <8 x float> %40), !dbg !32
  %79 = add i64 %45, 3, !dbg !32
  %80 = mul i64 %79, %36, !dbg !32
  %81 = getelementptr float, ptr %0, i64 %80, !dbg !32
  %82 = getelementptr float, ptr %81, i64 %.pn17, !dbg !32
  %83 = load float, ptr %82, align 4, !dbg !32
  %84 = insertelement <8 x float> poison, float %83, i64 0, !dbg !32
  %85 = shufflevector <8 x float> %84, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %86 = getelementptr float, ptr %72, i64 %47, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %86, i32 0, i32 3, i32 1), !dbg !32
  %87 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %50, <8 x float> %76, <8 x float> %39), !dbg !32
  %88 = getelementptr float, ptr %81, i64 %47, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %88, i32 0, i32 3, i32 1), !dbg !32
  %89 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %50, <8 x float> %85, <8 x float> %38), !dbg !32
  %90 = add i64 %46, 2, !dbg !32
  %91 = mul i64 %90, %35, !dbg !32
  %gep35 = getelementptr float, ptr %invariant.gep34, i64 %91, !dbg !32
  %92 = load <8 x float>, ptr %gep35, align 4, !dbg !32
  %93 = add i64 %46, 17, !dbg !32
  %94 = mul i64 %93, %35, !dbg !32
  %gep37 = getelementptr float, ptr %invariant.gep36, i64 %94, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep37, i32 0, i32 1, i32 1), !dbg !32
  %95 = or disjoint i64 %.pn17, 1, !dbg !32
  %96 = getelementptr float, ptr %56, i64 %95, !dbg !32
  %97 = load float, ptr %96, align 4, !dbg !32
  %98 = insertelement <8 x float> poison, float %97, i64 0, !dbg !32
  %99 = shufflevector <8 x float> %98, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %100 = getelementptr float, ptr %63, i64 %95, !dbg !32
  %101 = load float, ptr %100, align 4, !dbg !32
  %102 = insertelement <8 x float> poison, float %101, i64 0, !dbg !32
  %103 = shufflevector <8 x float> %102, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %104 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %53, <8 x float> %99, <8 x float> %69), !dbg !32
  %105 = getelementptr float, ptr %72, i64 %95, !dbg !32
  %106 = load float, ptr %105, align 4, !dbg !32
  %107 = insertelement <8 x float> poison, float %106, i64 0, !dbg !32
  %108 = shufflevector <8 x float> %107, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %109 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %53, <8 x float> %103, <8 x float> %78), !dbg !32
  %110 = getelementptr float, ptr %81, i64 %95, !dbg !32
  %111 = load float, ptr %110, align 4, !dbg !32
  %112 = insertelement <8 x float> poison, float %111, i64 0, !dbg !32
  %113 = shufflevector <8 x float> %112, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %114 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %53, <8 x float> %108, <8 x float> %87), !dbg !32
  %115 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %53, <8 x float> %113, <8 x float> %89), !dbg !32
  %116 = add i64 %46, 3, !dbg !32
  %117 = mul i64 %116, %35, !dbg !32
  %gep39 = getelementptr float, ptr %invariant.gep38, i64 %117, !dbg !32
  %118 = load <8 x float>, ptr %gep39, align 4, !dbg !32
  %119 = add i64 %46, 18, !dbg !32
  %120 = mul i64 %119, %35, !dbg !32
  %gep41 = getelementptr float, ptr %invariant.gep40, i64 %120, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep41, i32 0, i32 1, i32 1), !dbg !32
  %121 = or disjoint i64 %.pn17, 2, !dbg !32
  %122 = getelementptr float, ptr %56, i64 %121, !dbg !32
  %123 = load float, ptr %122, align 4, !dbg !32
  %124 = insertelement <8 x float> poison, float %123, i64 0, !dbg !32
  %125 = shufflevector <8 x float> %124, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %126 = getelementptr float, ptr %63, i64 %121, !dbg !32
  %127 = load float, ptr %126, align 4, !dbg !32
  %128 = insertelement <8 x float> poison, float %127, i64 0, !dbg !32
  %129 = shufflevector <8 x float> %128, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %130 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %92, <8 x float> %125, <8 x float> %104), !dbg !32
  %131 = getelementptr float, ptr %72, i64 %121, !dbg !32
  %132 = load float, ptr %131, align 4, !dbg !32
  %133 = insertelement <8 x float> poison, float %132, i64 0, !dbg !32
  %134 = shufflevector <8 x float> %133, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %135 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %92, <8 x float> %129, <8 x float> %109), !dbg !32
  %136 = getelementptr float, ptr %81, i64 %121, !dbg !32
  %137 = load float, ptr %136, align 4, !dbg !32
  %138 = insertelement <8 x float> poison, float %137, i64 0, !dbg !32
  %139 = shufflevector <8 x float> %138, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %140 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %92, <8 x float> %134, <8 x float> %114), !dbg !32
  %141 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %92, <8 x float> %139, <8 x float> %115), !dbg !32
  %142 = add i64 %46, 4, !dbg !32
  %143 = mul i64 %142, %35, !dbg !32
  %gep43 = getelementptr float, ptr %invariant.gep42, i64 %143, !dbg !32
  %144 = load <8 x float>, ptr %gep43, align 4, !dbg !32
  %145 = add i64 %46, 19, !dbg !32
  %146 = mul i64 %145, %35, !dbg !32
  %gep45 = getelementptr float, ptr %invariant.gep44, i64 %146, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep45, i32 0, i32 1, i32 1), !dbg !32
  %147 = or disjoint i64 %.pn17, 3, !dbg !32
  %148 = getelementptr float, ptr %56, i64 %147, !dbg !32
  %149 = load float, ptr %148, align 4, !dbg !32
  %150 = insertelement <8 x float> poison, float %149, i64 0, !dbg !32
  %151 = shufflevector <8 x float> %150, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %152 = getelementptr float, ptr %63, i64 %147, !dbg !32
  %153 = load float, ptr %152, align 4, !dbg !32
  %154 = insertelement <8 x float> poison, float %153, i64 0, !dbg !32
  %155 = shufflevector <8 x float> %154, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %156 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %118, <8 x float> %151, <8 x float> %130), !dbg !32
  %157 = getelementptr float, ptr %72, i64 %147, !dbg !32
  %158 = load float, ptr %157, align 4, !dbg !32
  %159 = insertelement <8 x float> poison, float %158, i64 0, !dbg !32
  %160 = shufflevector <8 x float> %159, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %161 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %118, <8 x float> %155, <8 x float> %135), !dbg !32
  %162 = getelementptr float, ptr %81, i64 %147, !dbg !32
  %163 = load float, ptr %162, align 4, !dbg !32
  %164 = insertelement <8 x float> poison, float %163, i64 0, !dbg !32
  %165 = shufflevector <8 x float> %164, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %166 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %118, <8 x float> %160, <8 x float> %140), !dbg !32
  %167 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %118, <8 x float> %165, <8 x float> %141), !dbg !32
  %168 = add i64 %46, 5, !dbg !32
  %169 = mul i64 %168, %35, !dbg !32
  %gep47 = getelementptr float, ptr %invariant.gep46, i64 %169, !dbg !32
  %170 = load <8 x float>, ptr %gep47, align 4, !dbg !32
  %171 = add i64 %46, 20, !dbg !32
  %172 = mul i64 %171, %35, !dbg !32
  %gep49 = getelementptr float, ptr %invariant.gep48, i64 %172, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep49, i32 0, i32 1, i32 1), !dbg !32
  %173 = or disjoint i64 %.pn17, 4, !dbg !32
  %174 = getelementptr float, ptr %56, i64 %173, !dbg !32
  %175 = load float, ptr %174, align 4, !dbg !32
  %176 = insertelement <8 x float> poison, float %175, i64 0, !dbg !32
  %177 = shufflevector <8 x float> %176, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %178 = getelementptr float, ptr %63, i64 %173, !dbg !32
  %179 = load float, ptr %178, align 4, !dbg !32
  %180 = insertelement <8 x float> poison, float %179, i64 0, !dbg !32
  %181 = shufflevector <8 x float> %180, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %182 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %144, <8 x float> %177, <8 x float> %156), !dbg !32
  %183 = getelementptr float, ptr %72, i64 %173, !dbg !32
  %184 = load float, ptr %183, align 4, !dbg !32
  %185 = insertelement <8 x float> poison, float %184, i64 0, !dbg !32
  %186 = shufflevector <8 x float> %185, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %187 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %144, <8 x float> %181, <8 x float> %161), !dbg !32
  %188 = getelementptr float, ptr %81, i64 %173, !dbg !32
  %189 = load float, ptr %188, align 4, !dbg !32
  %190 = insertelement <8 x float> poison, float %189, i64 0, !dbg !32
  %191 = shufflevector <8 x float> %190, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %192 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %144, <8 x float> %186, <8 x float> %166), !dbg !32
  %193 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %144, <8 x float> %191, <8 x float> %167), !dbg !32
  %194 = add i64 %46, 6, !dbg !32
  %195 = mul i64 %194, %35, !dbg !32
  %gep51 = getelementptr float, ptr %invariant.gep50, i64 %195, !dbg !32
  %196 = load <8 x float>, ptr %gep51, align 4, !dbg !32
  %197 = add i64 %46, 21, !dbg !32
  %198 = mul i64 %197, %35, !dbg !32
  %gep53 = getelementptr float, ptr %invariant.gep52, i64 %198, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep53, i32 0, i32 1, i32 1), !dbg !32
  %199 = or disjoint i64 %.pn17, 5, !dbg !32
  %200 = getelementptr float, ptr %56, i64 %199, !dbg !32
  %201 = load float, ptr %200, align 4, !dbg !32
  %202 = insertelement <8 x float> poison, float %201, i64 0, !dbg !32
  %203 = shufflevector <8 x float> %202, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %204 = getelementptr float, ptr %63, i64 %199, !dbg !32
  %205 = load float, ptr %204, align 4, !dbg !32
  %206 = insertelement <8 x float> poison, float %205, i64 0, !dbg !32
  %207 = shufflevector <8 x float> %206, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %208 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %170, <8 x float> %203, <8 x float> %182), !dbg !32
  %209 = getelementptr float, ptr %72, i64 %199, !dbg !32
  %210 = load float, ptr %209, align 4, !dbg !32
  %211 = insertelement <8 x float> poison, float %210, i64 0, !dbg !32
  %212 = shufflevector <8 x float> %211, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %213 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %170, <8 x float> %207, <8 x float> %187), !dbg !32
  %214 = getelementptr float, ptr %81, i64 %199, !dbg !32
  %215 = load float, ptr %214, align 4, !dbg !32
  %216 = insertelement <8 x float> poison, float %215, i64 0, !dbg !32
  %217 = shufflevector <8 x float> %216, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %218 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %170, <8 x float> %212, <8 x float> %192), !dbg !32
  %219 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %170, <8 x float> %217, <8 x float> %193), !dbg !32
  %220 = add i64 %46, 7, !dbg !32
  %221 = mul i64 %220, %35, !dbg !32
  %gep55 = getelementptr float, ptr %invariant.gep54, i64 %221, !dbg !32
  %222 = load <8 x float>, ptr %gep55, align 4, !dbg !32
  %223 = add i64 %46, 22, !dbg !32
  %224 = mul i64 %223, %35, !dbg !32
  %gep57 = getelementptr float, ptr %invariant.gep56, i64 %224, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep57, i32 0, i32 1, i32 1), !dbg !32
  %225 = or disjoint i64 %.pn17, 6, !dbg !32
  %226 = getelementptr float, ptr %56, i64 %225, !dbg !32
  %227 = load float, ptr %226, align 4, !dbg !32
  %228 = insertelement <8 x float> poison, float %227, i64 0, !dbg !32
  %229 = shufflevector <8 x float> %228, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %230 = getelementptr float, ptr %63, i64 %225, !dbg !32
  %231 = load float, ptr %230, align 4, !dbg !32
  %232 = insertelement <8 x float> poison, float %231, i64 0, !dbg !32
  %233 = shufflevector <8 x float> %232, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %234 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %196, <8 x float> %229, <8 x float> %208), !dbg !32
  %235 = getelementptr float, ptr %72, i64 %225, !dbg !32
  %236 = load float, ptr %235, align 4, !dbg !32
  %237 = insertelement <8 x float> poison, float %236, i64 0, !dbg !32
  %238 = shufflevector <8 x float> %237, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %239 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %196, <8 x float> %233, <8 x float> %213), !dbg !32
  %240 = getelementptr float, ptr %81, i64 %225, !dbg !32
  %241 = load float, ptr %240, align 4, !dbg !32
  %242 = insertelement <8 x float> poison, float %241, i64 0, !dbg !32
  %243 = shufflevector <8 x float> %242, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %244 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %196, <8 x float> %238, <8 x float> %218), !dbg !32
  %245 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %196, <8 x float> %243, <8 x float> %219), !dbg !32
  %246 = add i64 %46, 8, !dbg !32
  %247 = mul i64 %246, %35, !dbg !32
  %gep59 = getelementptr float, ptr %invariant.gep58, i64 %247, !dbg !32
  %248 = load <8 x float>, ptr %gep59, align 4, !dbg !32
  %249 = add i64 %46, 23, !dbg !32
  %250 = mul i64 %249, %35, !dbg !32
  %gep61 = getelementptr float, ptr %invariant.gep60, i64 %250, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep61, i32 0, i32 1, i32 1), !dbg !32
  %251 = or disjoint i64 %.pn17, 7, !dbg !32
  %252 = getelementptr float, ptr %56, i64 %251, !dbg !32
  %253 = load float, ptr %252, align 4, !dbg !32
  %254 = insertelement <8 x float> poison, float %253, i64 0, !dbg !32
  %255 = shufflevector <8 x float> %254, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %256 = getelementptr float, ptr %63, i64 %251, !dbg !32
  %257 = load float, ptr %256, align 4, !dbg !32
  %258 = insertelement <8 x float> poison, float %257, i64 0, !dbg !32
  %259 = shufflevector <8 x float> %258, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %260 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %222, <8 x float> %255, <8 x float> %234), !dbg !32
  %261 = getelementptr float, ptr %72, i64 %251, !dbg !32
  %262 = load float, ptr %261, align 4, !dbg !32
  %263 = insertelement <8 x float> poison, float %262, i64 0, !dbg !32
  %264 = shufflevector <8 x float> %263, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %265 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %222, <8 x float> %259, <8 x float> %239), !dbg !32
  %266 = getelementptr float, ptr %81, i64 %251, !dbg !32
  %267 = load float, ptr %266, align 4, !dbg !32
  %268 = insertelement <8 x float> poison, float %267, i64 0, !dbg !32
  %269 = shufflevector <8 x float> %268, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %270 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %222, <8 x float> %264, <8 x float> %244), !dbg !32
  %271 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %222, <8 x float> %269, <8 x float> %245), !dbg !32
  %272 = add i64 %46, 9, !dbg !32
  %273 = mul i64 %272, %35, !dbg !32
  %gep63 = getelementptr float, ptr %invariant.gep62, i64 %273, !dbg !32
  %274 = load <8 x float>, ptr %gep63, align 4, !dbg !32
  %275 = add i64 %46, 24, !dbg !32
  %276 = mul i64 %275, %35, !dbg !32
  %gep65 = getelementptr float, ptr %invariant.gep64, i64 %276, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep65, i32 0, i32 1, i32 1), !dbg !32
  %277 = or disjoint i64 %.pn17, 8, !dbg !32
  %278 = getelementptr float, ptr %56, i64 %277, !dbg !32
  %279 = load float, ptr %278, align 4, !dbg !32
  %280 = insertelement <8 x float> poison, float %279, i64 0, !dbg !32
  %281 = shufflevector <8 x float> %280, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %282 = getelementptr float, ptr %63, i64 %277, !dbg !32
  %283 = load float, ptr %282, align 4, !dbg !32
  %284 = insertelement <8 x float> poison, float %283, i64 0, !dbg !32
  %285 = shufflevector <8 x float> %284, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %286 = add i64 %.pn17, 40, !dbg !32
  %287 = getelementptr float, ptr %56, i64 %286, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %287, i32 0, i32 3, i32 1), !dbg !32
  %288 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %248, <8 x float> %281, <8 x float> %260), !dbg !32
  %289 = getelementptr float, ptr %72, i64 %277, !dbg !32
  %290 = load float, ptr %289, align 4, !dbg !32
  %291 = insertelement <8 x float> poison, float %290, i64 0, !dbg !32
  %292 = shufflevector <8 x float> %291, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %293 = getelementptr float, ptr %63, i64 %286, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %293, i32 0, i32 3, i32 1), !dbg !32
  %294 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %248, <8 x float> %285, <8 x float> %265), !dbg !32
  %295 = getelementptr float, ptr %81, i64 %277, !dbg !32
  %296 = load float, ptr %295, align 4, !dbg !32
  %297 = insertelement <8 x float> poison, float %296, i64 0, !dbg !32
  %298 = shufflevector <8 x float> %297, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %299 = getelementptr float, ptr %72, i64 %286, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %299, i32 0, i32 3, i32 1), !dbg !32
  %300 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %248, <8 x float> %292, <8 x float> %270), !dbg !32
  %301 = getelementptr float, ptr %81, i64 %286, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %301, i32 0, i32 3, i32 1), !dbg !32
  %302 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %248, <8 x float> %298, <8 x float> %271), !dbg !32
  %303 = add i64 %46, 10, !dbg !32
  %304 = mul i64 %303, %35, !dbg !32
  %gep67 = getelementptr float, ptr %invariant.gep66, i64 %304, !dbg !32
  %305 = load <8 x float>, ptr %gep67, align 4, !dbg !32
  %306 = add i64 %46, 25, !dbg !32
  %307 = mul i64 %306, %35, !dbg !32
  %gep69 = getelementptr float, ptr %invariant.gep68, i64 %307, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep69, i32 0, i32 1, i32 1), !dbg !32
  %308 = or disjoint i64 %.pn17, 9, !dbg !32
  %309 = getelementptr float, ptr %56, i64 %308, !dbg !32
  %310 = load float, ptr %309, align 4, !dbg !32
  %311 = insertelement <8 x float> poison, float %310, i64 0, !dbg !32
  %312 = shufflevector <8 x float> %311, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %313 = getelementptr float, ptr %63, i64 %308, !dbg !32
  %314 = load float, ptr %313, align 4, !dbg !32
  %315 = insertelement <8 x float> poison, float %314, i64 0, !dbg !32
  %316 = shufflevector <8 x float> %315, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %317 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %274, <8 x float> %312, <8 x float> %288), !dbg !32
  %318 = getelementptr float, ptr %72, i64 %308, !dbg !32
  %319 = load float, ptr %318, align 4, !dbg !32
  %320 = insertelement <8 x float> poison, float %319, i64 0, !dbg !32
  %321 = shufflevector <8 x float> %320, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %322 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %274, <8 x float> %316, <8 x float> %294), !dbg !32
  %323 = getelementptr float, ptr %81, i64 %308, !dbg !32
  %324 = load float, ptr %323, align 4, !dbg !32
  %325 = insertelement <8 x float> poison, float %324, i64 0, !dbg !32
  %326 = shufflevector <8 x float> %325, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %327 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %274, <8 x float> %321, <8 x float> %300), !dbg !32
  %328 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %274, <8 x float> %326, <8 x float> %302), !dbg !32
  %329 = add i64 %46, 11, !dbg !32
  %330 = mul i64 %329, %35, !dbg !32
  %gep71 = getelementptr float, ptr %invariant.gep70, i64 %330, !dbg !32
  %331 = load <8 x float>, ptr %gep71, align 4, !dbg !32
  %332 = add i64 %46, 26, !dbg !32
  %333 = mul i64 %332, %35, !dbg !32
  %gep73 = getelementptr float, ptr %invariant.gep72, i64 %333, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep73, i32 0, i32 1, i32 1), !dbg !32
  %334 = or disjoint i64 %.pn17, 10, !dbg !32
  %335 = getelementptr float, ptr %56, i64 %334, !dbg !32
  %336 = load float, ptr %335, align 4, !dbg !32
  %337 = insertelement <8 x float> poison, float %336, i64 0, !dbg !32
  %338 = shufflevector <8 x float> %337, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %339 = getelementptr float, ptr %63, i64 %334, !dbg !32
  %340 = load float, ptr %339, align 4, !dbg !32
  %341 = insertelement <8 x float> poison, float %340, i64 0, !dbg !32
  %342 = shufflevector <8 x float> %341, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %343 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %305, <8 x float> %338, <8 x float> %317), !dbg !32
  %344 = getelementptr float, ptr %72, i64 %334, !dbg !32
  %345 = load float, ptr %344, align 4, !dbg !32
  %346 = insertelement <8 x float> poison, float %345, i64 0, !dbg !32
  %347 = shufflevector <8 x float> %346, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %348 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %305, <8 x float> %342, <8 x float> %322), !dbg !32
  %349 = getelementptr float, ptr %81, i64 %334, !dbg !32
  %350 = load float, ptr %349, align 4, !dbg !32
  %351 = insertelement <8 x float> poison, float %350, i64 0, !dbg !32
  %352 = shufflevector <8 x float> %351, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %353 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %305, <8 x float> %347, <8 x float> %327), !dbg !32
  %354 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %305, <8 x float> %352, <8 x float> %328), !dbg !32
  %355 = add i64 %46, 12, !dbg !32
  %356 = mul i64 %355, %35, !dbg !32
  %gep75 = getelementptr float, ptr %invariant.gep74, i64 %356, !dbg !32
  %357 = load <8 x float>, ptr %gep75, align 4, !dbg !32
  %358 = add i64 %46, 27, !dbg !32
  %359 = mul i64 %358, %35, !dbg !32
  %gep77 = getelementptr float, ptr %invariant.gep76, i64 %359, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep77, i32 0, i32 1, i32 1), !dbg !32
  %360 = or disjoint i64 %.pn17, 11, !dbg !32
  %361 = getelementptr float, ptr %56, i64 %360, !dbg !32
  %362 = load float, ptr %361, align 4, !dbg !32
  %363 = insertelement <8 x float> poison, float %362, i64 0, !dbg !32
  %364 = shufflevector <8 x float> %363, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %365 = getelementptr float, ptr %63, i64 %360, !dbg !32
  %366 = load float, ptr %365, align 4, !dbg !32
  %367 = insertelement <8 x float> poison, float %366, i64 0, !dbg !32
  %368 = shufflevector <8 x float> %367, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %369 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %331, <8 x float> %364, <8 x float> %343), !dbg !32
  %370 = getelementptr float, ptr %72, i64 %360, !dbg !32
  %371 = load float, ptr %370, align 4, !dbg !32
  %372 = insertelement <8 x float> poison, float %371, i64 0, !dbg !32
  %373 = shufflevector <8 x float> %372, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %374 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %331, <8 x float> %368, <8 x float> %348), !dbg !32
  %375 = getelementptr float, ptr %81, i64 %360, !dbg !32
  %376 = load float, ptr %375, align 4, !dbg !32
  %377 = insertelement <8 x float> poison, float %376, i64 0, !dbg !32
  %378 = shufflevector <8 x float> %377, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %379 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %331, <8 x float> %373, <8 x float> %353), !dbg !32
  %380 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %331, <8 x float> %378, <8 x float> %354), !dbg !32
  %381 = add i64 %46, 13, !dbg !32
  %382 = mul i64 %381, %35, !dbg !32
  %gep79 = getelementptr float, ptr %invariant.gep78, i64 %382, !dbg !32
  %383 = load <8 x float>, ptr %gep79, align 4, !dbg !32
  %384 = add i64 %46, 28, !dbg !32
  %385 = mul i64 %384, %35, !dbg !32
  %gep81 = getelementptr float, ptr %invariant.gep80, i64 %385, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep81, i32 0, i32 1, i32 1), !dbg !32
  %386 = or disjoint i64 %.pn17, 12, !dbg !32
  %387 = getelementptr float, ptr %56, i64 %386, !dbg !32
  %388 = load float, ptr %387, align 4, !dbg !32
  %389 = insertelement <8 x float> poison, float %388, i64 0, !dbg !32
  %390 = shufflevector <8 x float> %389, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %391 = getelementptr float, ptr %63, i64 %386, !dbg !32
  %392 = load float, ptr %391, align 4, !dbg !32
  %393 = insertelement <8 x float> poison, float %392, i64 0, !dbg !32
  %394 = shufflevector <8 x float> %393, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %395 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %357, <8 x float> %390, <8 x float> %369), !dbg !32
  %396 = getelementptr float, ptr %72, i64 %386, !dbg !32
  %397 = load float, ptr %396, align 4, !dbg !32
  %398 = insertelement <8 x float> poison, float %397, i64 0, !dbg !32
  %399 = shufflevector <8 x float> %398, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %400 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %357, <8 x float> %394, <8 x float> %374), !dbg !32
  %401 = getelementptr float, ptr %81, i64 %386, !dbg !32
  %402 = load float, ptr %401, align 4, !dbg !32
  %403 = insertelement <8 x float> poison, float %402, i64 0, !dbg !32
  %404 = shufflevector <8 x float> %403, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %405 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %357, <8 x float> %399, <8 x float> %379), !dbg !32
  %406 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %357, <8 x float> %404, <8 x float> %380), !dbg !32
  %407 = add i64 %46, 14, !dbg !32
  %408 = mul i64 %407, %35, !dbg !32
  %gep83 = getelementptr float, ptr %invariant.gep82, i64 %408, !dbg !32
  %409 = load <8 x float>, ptr %gep83, align 4, !dbg !32
  %410 = add i64 %46, 29, !dbg !32
  %411 = mul i64 %410, %35, !dbg !32
  %gep85 = getelementptr float, ptr %invariant.gep84, i64 %411, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep85, i32 0, i32 1, i32 1), !dbg !32
  %412 = or disjoint i64 %.pn17, 13, !dbg !32
  %413 = getelementptr float, ptr %56, i64 %412, !dbg !32
  %414 = load float, ptr %413, align 4, !dbg !32
  %415 = insertelement <8 x float> poison, float %414, i64 0, !dbg !32
  %416 = shufflevector <8 x float> %415, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %417 = getelementptr float, ptr %63, i64 %412, !dbg !32
  %418 = load float, ptr %417, align 4, !dbg !32
  %419 = insertelement <8 x float> poison, float %418, i64 0, !dbg !32
  %420 = shufflevector <8 x float> %419, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %421 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %383, <8 x float> %416, <8 x float> %395), !dbg !32
  %422 = getelementptr float, ptr %72, i64 %412, !dbg !32
  %423 = load float, ptr %422, align 4, !dbg !32
  %424 = insertelement <8 x float> poison, float %423, i64 0, !dbg !32
  %425 = shufflevector <8 x float> %424, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %426 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %383, <8 x float> %420, <8 x float> %400), !dbg !32
  %427 = getelementptr float, ptr %81, i64 %412, !dbg !32
  %428 = load float, ptr %427, align 4, !dbg !32
  %429 = insertelement <8 x float> poison, float %428, i64 0, !dbg !32
  %430 = shufflevector <8 x float> %429, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %431 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %383, <8 x float> %425, <8 x float> %405), !dbg !32
  %432 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %383, <8 x float> %430, <8 x float> %406), !dbg !32
  %433 = add i64 %46, 15, !dbg !32
  %434 = mul i64 %433, %35, !dbg !32
  %gep87 = getelementptr float, ptr %invariant.gep86, i64 %434, !dbg !32
  %435 = load <8 x float>, ptr %gep87, align 4, !dbg !32
  %436 = add i64 %46, 30, !dbg !32
  %437 = mul i64 %436, %35, !dbg !32
  %gep89 = getelementptr float, ptr %invariant.gep88, i64 %437, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep89, i32 0, i32 1, i32 1), !dbg !32
  %438 = or disjoint i64 %.pn17, 14, !dbg !32
  %439 = getelementptr float, ptr %56, i64 %438, !dbg !32
  %440 = load float, ptr %439, align 4, !dbg !32
  %441 = insertelement <8 x float> poison, float %440, i64 0, !dbg !32
  %442 = shufflevector <8 x float> %441, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %443 = getelementptr float, ptr %63, i64 %438, !dbg !32
  %444 = load float, ptr %443, align 4, !dbg !32
  %445 = insertelement <8 x float> poison, float %444, i64 0, !dbg !32
  %446 = shufflevector <8 x float> %445, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %447 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %409, <8 x float> %442, <8 x float> %421), !dbg !32
  %448 = getelementptr float, ptr %72, i64 %438, !dbg !32
  %449 = load float, ptr %448, align 4, !dbg !32
  %450 = insertelement <8 x float> poison, float %449, i64 0, !dbg !32
  %451 = shufflevector <8 x float> %450, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %452 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %409, <8 x float> %446, <8 x float> %426), !dbg !32
  %453 = getelementptr float, ptr %81, i64 %438, !dbg !32
  %454 = load float, ptr %453, align 4, !dbg !32
  %455 = insertelement <8 x float> poison, float %454, i64 0, !dbg !32
  %456 = shufflevector <8 x float> %455, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %457 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %409, <8 x float> %451, <8 x float> %431), !dbg !32
  %458 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %409, <8 x float> %456, <8 x float> %432), !dbg !32
  %459 = add i64 %46, 31, !dbg !32
  %460 = mul i64 %459, %35, !dbg !32
  %gep91 = getelementptr float, ptr %invariant.gep90, i64 %460, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep91, i32 0, i32 1, i32 1), !dbg !32
  %461 = or disjoint i64 %.pn17, 15, !dbg !32
  %462 = getelementptr float, ptr %56, i64 %461, !dbg !32
  %463 = load float, ptr %462, align 4, !dbg !32
  %464 = insertelement <8 x float> poison, float %463, i64 0, !dbg !32
  %465 = shufflevector <8 x float> %464, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %466 = getelementptr float, ptr %63, i64 %461, !dbg !32
  %467 = load float, ptr %466, align 4, !dbg !32
  %468 = insertelement <8 x float> poison, float %467, i64 0, !dbg !32
  %469 = shufflevector <8 x float> %468, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %470 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %435, <8 x float> %465, <8 x float> %447), !dbg !32
  %471 = getelementptr float, ptr %72, i64 %461, !dbg !32
  %472 = load float, ptr %471, align 4, !dbg !32
  %473 = insertelement <8 x float> poison, float %472, i64 0, !dbg !32
  %474 = shufflevector <8 x float> %473, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %475 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %435, <8 x float> %469, <8 x float> %452), !dbg !32
  %476 = getelementptr float, ptr %81, i64 %461, !dbg !32
  %477 = load float, ptr %476, align 4, !dbg !32
  %478 = insertelement <8 x float> poison, float %477, i64 0, !dbg !32
  %479 = shufflevector <8 x float> %478, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !32
  %480 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %435, <8 x float> %474, <8 x float> %457), !dbg !32
  %481 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %435, <8 x float> %479, <8 x float> %458), !dbg !32
  %482 = add i64 %.pn17, 16, !dbg !33
  %483 = add nuw nsw i32 %42, 1, !dbg !29
  %exitcond.not = icmp eq i32 %483, %33, !dbg !29
  %484 = insertvalue [2 x i64] %44, i64 %48, 0, !dbg !29
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !dbg !29

._crit_edge:                                      ; preds = %.lr.ph, %15
  %.lcssa3 = phi <8 x float> [ zeroinitializer, %15 ], [ %470, %.lr.ph ]
  %.lcssa2 = phi <8 x float> [ zeroinitializer, %15 ], [ %475, %.lr.ph ]
  %.lcssa1 = phi <8 x float> [ zeroinitializer, %15 ], [ %480, %.lr.ph ]
  %.lcssa = phi <8 x float> [ zeroinitializer, %15 ], [ %481, %.lr.ph ]
  %485 = sext i32 %8 to i64, !dbg !34
  %486 = mul nsw i64 %31, %485, !dbg !35
  %487 = getelementptr float, ptr %2, i64 %486, !dbg !35
  %488 = getelementptr float, ptr %487, i64 %32, !dbg !35
  store <8 x float> %.lcssa3, ptr %488, align 4, !dbg !35
  %489 = or disjoint i64 %31, 1, !dbg !35
  %490 = mul nsw i64 %489, %485, !dbg !35
  %491 = getelementptr float, ptr %2, i64 %490, !dbg !35
  %492 = getelementptr float, ptr %491, i64 %32, !dbg !35
  store <8 x float> %.lcssa2, ptr %492, align 4, !dbg !35
  %493 = or disjoint i64 %31, 2, !dbg !35
  %494 = mul nsw i64 %493, %485, !dbg !35
  %495 = getelementptr float, ptr %2, i64 %494, !dbg !35
  %496 = getelementptr float, ptr %495, i64 %32, !dbg !35
  store <8 x float> %.lcssa1, ptr %496, align 4, !dbg !35
  %497 = or disjoint i64 %31, 3, !dbg !35
  %498 = mul nsw i64 %497, %485, !dbg !35
  %499 = getelementptr float, ptr %2, i64 %498, !dbg !35
  %500 = getelementptr float, ptr %499, i64 %32, !dbg !35
  store <8 x float> %.lcssa, ptr %500, align 4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @llvm.prefetch.p0(ptr readonly captures(none), i32 immarg, i32 immarg, i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #1

attributes #0 = { nofree norecurse nosync nounwind }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "matmul.py", directory: "/home/yuhao/T_RVV/benchmark/src/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "matmul_kernel", linkageName: "matmul_kernel", scope: !1, file: !1, line: 24, type: !4, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!4 = !DISubroutineType(cc: DW_CC_normal, types: !5)
!5 = !{}
!6 = !DILocation(line: 40, column: 22, scope: !7, inlinedAt: !9)
!7 = distinct !DILexicalBlockFile(scope: !3, file: !8, discriminator: 0)
!8 = !DIFile(filename: "standard.py", directory: "/home/yuhao/triton-cpu/python/triton/language")
!9 = !DILocation(line: 46, column: 27, scope: !3)
!10 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !9)
!11 = !DILocation(line: 40, column: 22, scope: !7, inlinedAt: !12)
!12 = !DILocation(line: 47, column: 27, scope: !3)
!13 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !12)
!14 = !DILocation(line: 48, column: 38, scope: !3)
!15 = !DILocation(line: 49, column: 22, scope: !3)
!16 = !DILocation(line: 50, column: 29, scope: !3)
!17 = !DILocation(line: 51, column: 35, scope: !3)
!18 = !DILocation(line: 51, column: 48, scope: !3)
!19 = !DILocation(line: 52, column: 33, scope: !3)
!20 = !DILocation(line: 52, column: 27, scope: !3)
!21 = !DILocation(line: 53, column: 19, scope: !3)
!22 = !DILocation(line: 53, column: 40, scope: !3)
!23 = !DILocation(line: 63, column: 33, scope: !3)
!24 = !DILocation(line: 64, column: 33, scope: !3)
!25 = !DILocation(line: 67, column: 39, scope: !3)
!26 = !DILocation(line: 70, column: 39, scope: !3)
!27 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !28)
!28 = !DILocation(line: 79, column: 33, scope: !3)
!29 = !DILocation(line: 79, column: 22, scope: !3)
!30 = !DILocation(line: 83, column: 20, scope: !3)
!31 = !DILocation(line: 84, column: 20, scope: !3)
!32 = !DILocation(line: 86, column: 35, scope: !3)
!33 = !DILocation(line: 89, column: 48, scope: !3)
!34 = !DILocation(line: 102, column: 81, scope: !3)
!35 = !DILocation(line: 103, column: 29, scope: !3)
!36 = !DILocation(line: 99, column: 4, scope: !3)
