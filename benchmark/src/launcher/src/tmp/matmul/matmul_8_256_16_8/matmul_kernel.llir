; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nosync nounwind
define void @matmul_kernel(ptr %0, ptr %1, ptr writeonly captures(none) %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14) local_unnamed_addr #0 !dbg !3 {
  %16 = add i32 %3, 7, !dbg !6
  %17 = sdiv i32 %16, 8, !dbg !10
  %18 = add i32 %4, 255, !dbg !11
  %19 = sdiv i32 %18, 256, !dbg !13
  %20 = shl nsw i32 %19, 3, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %.frozen120 = freeze i32 %20, !dbg !15
  %21 = sdiv i32 %.frozen, %.frozen120, !dbg !15
  %22 = shl i32 %21, 3, !dbg !16
  %23 = sub i32 %17, %22, !dbg !17
  %24 = tail call i32 @llvm.smin.i32(i32 %23, i32 8), !dbg !18
  %25 = srem i32 %9, %24, !dbg !19
  %26 = add i32 %22, %25, !dbg !20
  %27 = mul i32 %21, %.frozen120, !dbg !21
  %.decomposed = sub i32 %.frozen, %27, !dbg !21
  %28 = sdiv i32 %.decomposed, %24, !dbg !22
  %29 = shl i32 %26, 3, !dbg !23
  %30 = shl i32 %28, 8, !dbg !24
  %31 = zext i32 %29 to i64, !dbg !25
  %32 = zext i32 %30 to i64, !dbg !26
  %33 = sdiv i32 %5, 16, !dbg !27
  %34 = icmp sgt i32 %5, 15, !dbg !29
  br i1 %34, label %.lr.ph.preheader, label %._crit_edge, !dbg !29

.lr.ph.preheader:                                 ; preds = %15
  %35 = sext i32 %7 to i64, !dbg !26
  %36 = sext i32 %6 to i64, !dbg !25
  %37 = insertvalue [2 x i64] undef, i64 %31, 0, !dbg !29
  %invariant.gep = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep58 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep60 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep62 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep64 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep66 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep68 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep70 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep72 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep74 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep76 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep78 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep80 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep82 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep84 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep86 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep88 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep90 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep92 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep94 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep96 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep98 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep100 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep102 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep104 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep106 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep108 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep110 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep112 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep114 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep116 = getelementptr float, ptr %1, i64 %32, !dbg !29
  %invariant.gep118 = getelementptr float, ptr %1, i64 %32, !dbg !29
  br label %.lr.ph, !dbg !29

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %38 = phi <256 x float> [ %825, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %39 = phi <256 x float> [ %824, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %40 = phi <256 x float> [ %819, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %41 = phi <256 x float> [ %814, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %42 = phi <256 x float> [ %809, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %43 = phi <256 x float> [ %804, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %44 = phi <256 x float> [ %799, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %45 = phi <256 x float> [ %794, %.lr.ph ], [ zeroinitializer, %.lr.ph.preheader ]
  %.pn = phi [2 x i64] [ %827, %.lr.ph ], [ [i64 0, i64 undef], %.lr.ph.preheader ]
  %.pn32 = phi [2 x i64] [ %47, %.lr.ph ], [ %37, %.lr.ph.preheader ]
  %.pn33 = phi i64 [ %51, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %46 = phi i32 [ %826, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %47 = insertvalue [2 x i64] %.pn32, i64 %.pn33, 1, !dbg !29
  %48 = insertvalue [2 x i64] %.pn, i64 %32, 1, !dbg !29
  %49 = extractvalue [2 x i64] %.pn32, 0, !dbg !30
  %50 = extractvalue [2 x i64] %.pn, 0, !dbg !31
  %51 = add i64 %.pn33, 16, !dbg !32
  %52 = add i64 %50, 16, !dbg !32
  %53 = mul i64 %50, %35, !dbg !32
  %gep = getelementptr float, ptr %invariant.gep, i64 %53, !dbg !32
  %54 = load <256 x float>, ptr %gep, align 4, !dbg !32
  %55 = add i64 %50, 1, !dbg !32
  %56 = mul i64 %55, %35, !dbg !32
  %gep59 = getelementptr float, ptr %invariant.gep58, i64 %56, !dbg !32
  %57 = load <256 x float>, ptr %gep59, align 4, !dbg !32
  %58 = mul i64 %52, %35, !dbg !32
  %gep61 = getelementptr float, ptr %invariant.gep60, i64 %58, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep61, i32 0, i32 1, i32 1), !dbg !32
  %59 = mul i64 %49, %36, !dbg !32
  %60 = getelementptr float, ptr %0, i64 %59, !dbg !32
  %61 = getelementptr float, ptr %60, i64 %.pn33, !dbg !32
  %62 = load float, ptr %61, align 4, !dbg !32
  %63 = insertelement <256 x float> poison, float %62, i64 0, !dbg !32
  %64 = shufflevector <256 x float> %63, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %65 = add i64 %49, 1, !dbg !32
  %66 = mul i64 %65, %36, !dbg !32
  %67 = getelementptr float, ptr %0, i64 %66, !dbg !32
  %68 = getelementptr float, ptr %67, i64 %.pn33, !dbg !32
  %69 = load float, ptr %68, align 4, !dbg !32
  %70 = insertelement <256 x float> poison, float %69, i64 0, !dbg !32
  %71 = shufflevector <256 x float> %70, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %72 = getelementptr float, ptr %60, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %72, i32 0, i32 3, i32 1), !dbg !32
  %73 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %64, <256 x float> %45), !dbg !32
  %74 = add i64 %49, 2, !dbg !32
  %75 = mul i64 %74, %36, !dbg !32
  %76 = getelementptr float, ptr %0, i64 %75, !dbg !32
  %77 = getelementptr float, ptr %76, i64 %.pn33, !dbg !32
  %78 = load float, ptr %77, align 4, !dbg !32
  %79 = insertelement <256 x float> poison, float %78, i64 0, !dbg !32
  %80 = shufflevector <256 x float> %79, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %81 = getelementptr float, ptr %67, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %81, i32 0, i32 3, i32 1), !dbg !32
  %82 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %71, <256 x float> %44), !dbg !32
  %83 = add i64 %49, 3, !dbg !32
  %84 = mul i64 %83, %36, !dbg !32
  %85 = getelementptr float, ptr %0, i64 %84, !dbg !32
  %86 = getelementptr float, ptr %85, i64 %.pn33, !dbg !32
  %87 = load float, ptr %86, align 4, !dbg !32
  %88 = insertelement <256 x float> poison, float %87, i64 0, !dbg !32
  %89 = shufflevector <256 x float> %88, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %90 = getelementptr float, ptr %76, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %90, i32 0, i32 3, i32 1), !dbg !32
  %91 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %80, <256 x float> %43), !dbg !32
  %92 = add i64 %49, 4, !dbg !32
  %93 = mul i64 %92, %36, !dbg !32
  %94 = getelementptr float, ptr %0, i64 %93, !dbg !32
  %95 = getelementptr float, ptr %94, i64 %.pn33, !dbg !32
  %96 = load float, ptr %95, align 4, !dbg !32
  %97 = insertelement <256 x float> poison, float %96, i64 0, !dbg !32
  %98 = shufflevector <256 x float> %97, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %99 = getelementptr float, ptr %85, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %99, i32 0, i32 3, i32 1), !dbg !32
  %100 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %89, <256 x float> %42), !dbg !32
  %101 = add i64 %49, 5, !dbg !32
  %102 = mul i64 %101, %36, !dbg !32
  %103 = getelementptr float, ptr %0, i64 %102, !dbg !32
  %104 = getelementptr float, ptr %103, i64 %.pn33, !dbg !32
  %105 = load float, ptr %104, align 4, !dbg !32
  %106 = insertelement <256 x float> poison, float %105, i64 0, !dbg !32
  %107 = shufflevector <256 x float> %106, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %108 = getelementptr float, ptr %94, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %108, i32 0, i32 3, i32 1), !dbg !32
  %109 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %98, <256 x float> %41), !dbg !32
  %110 = add i64 %49, 6, !dbg !32
  %111 = mul i64 %110, %36, !dbg !32
  %112 = getelementptr float, ptr %0, i64 %111, !dbg !32
  %113 = getelementptr float, ptr %112, i64 %.pn33, !dbg !32
  %114 = load float, ptr %113, align 4, !dbg !32
  %115 = insertelement <256 x float> poison, float %114, i64 0, !dbg !32
  %116 = shufflevector <256 x float> %115, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %117 = getelementptr float, ptr %103, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %117, i32 0, i32 3, i32 1), !dbg !32
  %118 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %107, <256 x float> %40), !dbg !32
  %119 = add i64 %49, 7, !dbg !32
  %120 = mul i64 %119, %36, !dbg !32
  %121 = getelementptr float, ptr %0, i64 %120, !dbg !32
  %122 = getelementptr float, ptr %121, i64 %.pn33, !dbg !32
  %123 = load float, ptr %122, align 4, !dbg !32
  %124 = insertelement <256 x float> poison, float %123, i64 0, !dbg !32
  %125 = shufflevector <256 x float> %124, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %126 = getelementptr float, ptr %112, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %126, i32 0, i32 3, i32 1), !dbg !32
  %127 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %116, <256 x float> %39), !dbg !32
  %128 = getelementptr float, ptr %121, i64 %51, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %128, i32 0, i32 3, i32 1), !dbg !32
  %129 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %54, <256 x float> %125, <256 x float> %38), !dbg !32
  %130 = add i64 %50, 2, !dbg !32
  %131 = mul i64 %130, %35, !dbg !32
  %gep63 = getelementptr float, ptr %invariant.gep62, i64 %131, !dbg !32
  %132 = load <256 x float>, ptr %gep63, align 4, !dbg !32
  %133 = add i64 %50, 17, !dbg !32
  %134 = mul i64 %133, %35, !dbg !32
  %gep65 = getelementptr float, ptr %invariant.gep64, i64 %134, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep65, i32 0, i32 1, i32 1), !dbg !32
  %135 = or disjoint i64 %.pn33, 1, !dbg !32
  %136 = getelementptr float, ptr %60, i64 %135, !dbg !32
  %137 = load float, ptr %136, align 4, !dbg !32
  %138 = insertelement <256 x float> poison, float %137, i64 0, !dbg !32
  %139 = shufflevector <256 x float> %138, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %140 = getelementptr float, ptr %67, i64 %135, !dbg !32
  %141 = load float, ptr %140, align 4, !dbg !32
  %142 = insertelement <256 x float> poison, float %141, i64 0, !dbg !32
  %143 = shufflevector <256 x float> %142, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %144 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %139, <256 x float> %73), !dbg !32
  %145 = getelementptr float, ptr %76, i64 %135, !dbg !32
  %146 = load float, ptr %145, align 4, !dbg !32
  %147 = insertelement <256 x float> poison, float %146, i64 0, !dbg !32
  %148 = shufflevector <256 x float> %147, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %149 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %143, <256 x float> %82), !dbg !32
  %150 = getelementptr float, ptr %85, i64 %135, !dbg !32
  %151 = load float, ptr %150, align 4, !dbg !32
  %152 = insertelement <256 x float> poison, float %151, i64 0, !dbg !32
  %153 = shufflevector <256 x float> %152, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %154 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %148, <256 x float> %91), !dbg !32
  %155 = getelementptr float, ptr %94, i64 %135, !dbg !32
  %156 = load float, ptr %155, align 4, !dbg !32
  %157 = insertelement <256 x float> poison, float %156, i64 0, !dbg !32
  %158 = shufflevector <256 x float> %157, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %159 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %153, <256 x float> %100), !dbg !32
  %160 = getelementptr float, ptr %103, i64 %135, !dbg !32
  %161 = load float, ptr %160, align 4, !dbg !32
  %162 = insertelement <256 x float> poison, float %161, i64 0, !dbg !32
  %163 = shufflevector <256 x float> %162, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %164 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %158, <256 x float> %109), !dbg !32
  %165 = getelementptr float, ptr %112, i64 %135, !dbg !32
  %166 = load float, ptr %165, align 4, !dbg !32
  %167 = insertelement <256 x float> poison, float %166, i64 0, !dbg !32
  %168 = shufflevector <256 x float> %167, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %169 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %163, <256 x float> %118), !dbg !32
  %170 = getelementptr float, ptr %121, i64 %135, !dbg !32
  %171 = load float, ptr %170, align 4, !dbg !32
  %172 = insertelement <256 x float> poison, float %171, i64 0, !dbg !32
  %173 = shufflevector <256 x float> %172, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %174 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %168, <256 x float> %127), !dbg !32
  %175 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %57, <256 x float> %173, <256 x float> %129), !dbg !32
  %176 = add i64 %50, 3, !dbg !32
  %177 = mul i64 %176, %35, !dbg !32
  %gep67 = getelementptr float, ptr %invariant.gep66, i64 %177, !dbg !32
  %178 = load <256 x float>, ptr %gep67, align 4, !dbg !32
  %179 = add i64 %50, 18, !dbg !32
  %180 = mul i64 %179, %35, !dbg !32
  %gep69 = getelementptr float, ptr %invariant.gep68, i64 %180, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep69, i32 0, i32 1, i32 1), !dbg !32
  %181 = or disjoint i64 %.pn33, 2, !dbg !32
  %182 = getelementptr float, ptr %60, i64 %181, !dbg !32
  %183 = load float, ptr %182, align 4, !dbg !32
  %184 = insertelement <256 x float> poison, float %183, i64 0, !dbg !32
  %185 = shufflevector <256 x float> %184, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %186 = getelementptr float, ptr %67, i64 %181, !dbg !32
  %187 = load float, ptr %186, align 4, !dbg !32
  %188 = insertelement <256 x float> poison, float %187, i64 0, !dbg !32
  %189 = shufflevector <256 x float> %188, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %190 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %185, <256 x float> %144), !dbg !32
  %191 = getelementptr float, ptr %76, i64 %181, !dbg !32
  %192 = load float, ptr %191, align 4, !dbg !32
  %193 = insertelement <256 x float> poison, float %192, i64 0, !dbg !32
  %194 = shufflevector <256 x float> %193, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %195 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %189, <256 x float> %149), !dbg !32
  %196 = getelementptr float, ptr %85, i64 %181, !dbg !32
  %197 = load float, ptr %196, align 4, !dbg !32
  %198 = insertelement <256 x float> poison, float %197, i64 0, !dbg !32
  %199 = shufflevector <256 x float> %198, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %200 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %194, <256 x float> %154), !dbg !32
  %201 = getelementptr float, ptr %94, i64 %181, !dbg !32
  %202 = load float, ptr %201, align 4, !dbg !32
  %203 = insertelement <256 x float> poison, float %202, i64 0, !dbg !32
  %204 = shufflevector <256 x float> %203, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %205 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %199, <256 x float> %159), !dbg !32
  %206 = getelementptr float, ptr %103, i64 %181, !dbg !32
  %207 = load float, ptr %206, align 4, !dbg !32
  %208 = insertelement <256 x float> poison, float %207, i64 0, !dbg !32
  %209 = shufflevector <256 x float> %208, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %210 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %204, <256 x float> %164), !dbg !32
  %211 = getelementptr float, ptr %112, i64 %181, !dbg !32
  %212 = load float, ptr %211, align 4, !dbg !32
  %213 = insertelement <256 x float> poison, float %212, i64 0, !dbg !32
  %214 = shufflevector <256 x float> %213, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %215 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %209, <256 x float> %169), !dbg !32
  %216 = getelementptr float, ptr %121, i64 %181, !dbg !32
  %217 = load float, ptr %216, align 4, !dbg !32
  %218 = insertelement <256 x float> poison, float %217, i64 0, !dbg !32
  %219 = shufflevector <256 x float> %218, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %220 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %214, <256 x float> %174), !dbg !32
  %221 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %132, <256 x float> %219, <256 x float> %175), !dbg !32
  %222 = add i64 %50, 4, !dbg !32
  %223 = mul i64 %222, %35, !dbg !32
  %gep71 = getelementptr float, ptr %invariant.gep70, i64 %223, !dbg !32
  %224 = load <256 x float>, ptr %gep71, align 4, !dbg !32
  %225 = add i64 %50, 19, !dbg !32
  %226 = mul i64 %225, %35, !dbg !32
  %gep73 = getelementptr float, ptr %invariant.gep72, i64 %226, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep73, i32 0, i32 1, i32 1), !dbg !32
  %227 = or disjoint i64 %.pn33, 3, !dbg !32
  %228 = getelementptr float, ptr %60, i64 %227, !dbg !32
  %229 = load float, ptr %228, align 4, !dbg !32
  %230 = insertelement <256 x float> poison, float %229, i64 0, !dbg !32
  %231 = shufflevector <256 x float> %230, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %232 = getelementptr float, ptr %67, i64 %227, !dbg !32
  %233 = load float, ptr %232, align 4, !dbg !32
  %234 = insertelement <256 x float> poison, float %233, i64 0, !dbg !32
  %235 = shufflevector <256 x float> %234, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %236 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %231, <256 x float> %190), !dbg !32
  %237 = getelementptr float, ptr %76, i64 %227, !dbg !32
  %238 = load float, ptr %237, align 4, !dbg !32
  %239 = insertelement <256 x float> poison, float %238, i64 0, !dbg !32
  %240 = shufflevector <256 x float> %239, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %241 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %235, <256 x float> %195), !dbg !32
  %242 = getelementptr float, ptr %85, i64 %227, !dbg !32
  %243 = load float, ptr %242, align 4, !dbg !32
  %244 = insertelement <256 x float> poison, float %243, i64 0, !dbg !32
  %245 = shufflevector <256 x float> %244, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %246 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %240, <256 x float> %200), !dbg !32
  %247 = getelementptr float, ptr %94, i64 %227, !dbg !32
  %248 = load float, ptr %247, align 4, !dbg !32
  %249 = insertelement <256 x float> poison, float %248, i64 0, !dbg !32
  %250 = shufflevector <256 x float> %249, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %251 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %245, <256 x float> %205), !dbg !32
  %252 = getelementptr float, ptr %103, i64 %227, !dbg !32
  %253 = load float, ptr %252, align 4, !dbg !32
  %254 = insertelement <256 x float> poison, float %253, i64 0, !dbg !32
  %255 = shufflevector <256 x float> %254, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %256 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %250, <256 x float> %210), !dbg !32
  %257 = getelementptr float, ptr %112, i64 %227, !dbg !32
  %258 = load float, ptr %257, align 4, !dbg !32
  %259 = insertelement <256 x float> poison, float %258, i64 0, !dbg !32
  %260 = shufflevector <256 x float> %259, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %261 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %255, <256 x float> %215), !dbg !32
  %262 = getelementptr float, ptr %121, i64 %227, !dbg !32
  %263 = load float, ptr %262, align 4, !dbg !32
  %264 = insertelement <256 x float> poison, float %263, i64 0, !dbg !32
  %265 = shufflevector <256 x float> %264, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %266 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %260, <256 x float> %220), !dbg !32
  %267 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %178, <256 x float> %265, <256 x float> %221), !dbg !32
  %268 = add i64 %50, 5, !dbg !32
  %269 = mul i64 %268, %35, !dbg !32
  %gep75 = getelementptr float, ptr %invariant.gep74, i64 %269, !dbg !32
  %270 = load <256 x float>, ptr %gep75, align 4, !dbg !32
  %271 = add i64 %50, 20, !dbg !32
  %272 = mul i64 %271, %35, !dbg !32
  %gep77 = getelementptr float, ptr %invariant.gep76, i64 %272, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep77, i32 0, i32 1, i32 1), !dbg !32
  %273 = or disjoint i64 %.pn33, 4, !dbg !32
  %274 = getelementptr float, ptr %60, i64 %273, !dbg !32
  %275 = load float, ptr %274, align 4, !dbg !32
  %276 = insertelement <256 x float> poison, float %275, i64 0, !dbg !32
  %277 = shufflevector <256 x float> %276, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %278 = getelementptr float, ptr %67, i64 %273, !dbg !32
  %279 = load float, ptr %278, align 4, !dbg !32
  %280 = insertelement <256 x float> poison, float %279, i64 0, !dbg !32
  %281 = shufflevector <256 x float> %280, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %282 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %277, <256 x float> %236), !dbg !32
  %283 = getelementptr float, ptr %76, i64 %273, !dbg !32
  %284 = load float, ptr %283, align 4, !dbg !32
  %285 = insertelement <256 x float> poison, float %284, i64 0, !dbg !32
  %286 = shufflevector <256 x float> %285, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %287 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %281, <256 x float> %241), !dbg !32
  %288 = getelementptr float, ptr %85, i64 %273, !dbg !32
  %289 = load float, ptr %288, align 4, !dbg !32
  %290 = insertelement <256 x float> poison, float %289, i64 0, !dbg !32
  %291 = shufflevector <256 x float> %290, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %292 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %286, <256 x float> %246), !dbg !32
  %293 = getelementptr float, ptr %94, i64 %273, !dbg !32
  %294 = load float, ptr %293, align 4, !dbg !32
  %295 = insertelement <256 x float> poison, float %294, i64 0, !dbg !32
  %296 = shufflevector <256 x float> %295, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %297 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %291, <256 x float> %251), !dbg !32
  %298 = getelementptr float, ptr %103, i64 %273, !dbg !32
  %299 = load float, ptr %298, align 4, !dbg !32
  %300 = insertelement <256 x float> poison, float %299, i64 0, !dbg !32
  %301 = shufflevector <256 x float> %300, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %302 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %296, <256 x float> %256), !dbg !32
  %303 = getelementptr float, ptr %112, i64 %273, !dbg !32
  %304 = load float, ptr %303, align 4, !dbg !32
  %305 = insertelement <256 x float> poison, float %304, i64 0, !dbg !32
  %306 = shufflevector <256 x float> %305, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %307 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %301, <256 x float> %261), !dbg !32
  %308 = getelementptr float, ptr %121, i64 %273, !dbg !32
  %309 = load float, ptr %308, align 4, !dbg !32
  %310 = insertelement <256 x float> poison, float %309, i64 0, !dbg !32
  %311 = shufflevector <256 x float> %310, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %312 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %306, <256 x float> %266), !dbg !32
  %313 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %224, <256 x float> %311, <256 x float> %267), !dbg !32
  %314 = add i64 %50, 6, !dbg !32
  %315 = mul i64 %314, %35, !dbg !32
  %gep79 = getelementptr float, ptr %invariant.gep78, i64 %315, !dbg !32
  %316 = load <256 x float>, ptr %gep79, align 4, !dbg !32
  %317 = add i64 %50, 21, !dbg !32
  %318 = mul i64 %317, %35, !dbg !32
  %gep81 = getelementptr float, ptr %invariant.gep80, i64 %318, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep81, i32 0, i32 1, i32 1), !dbg !32
  %319 = or disjoint i64 %.pn33, 5, !dbg !32
  %320 = getelementptr float, ptr %60, i64 %319, !dbg !32
  %321 = load float, ptr %320, align 4, !dbg !32
  %322 = insertelement <256 x float> poison, float %321, i64 0, !dbg !32
  %323 = shufflevector <256 x float> %322, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %324 = getelementptr float, ptr %67, i64 %319, !dbg !32
  %325 = load float, ptr %324, align 4, !dbg !32
  %326 = insertelement <256 x float> poison, float %325, i64 0, !dbg !32
  %327 = shufflevector <256 x float> %326, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %328 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %323, <256 x float> %282), !dbg !32
  %329 = getelementptr float, ptr %76, i64 %319, !dbg !32
  %330 = load float, ptr %329, align 4, !dbg !32
  %331 = insertelement <256 x float> poison, float %330, i64 0, !dbg !32
  %332 = shufflevector <256 x float> %331, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %333 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %327, <256 x float> %287), !dbg !32
  %334 = getelementptr float, ptr %85, i64 %319, !dbg !32
  %335 = load float, ptr %334, align 4, !dbg !32
  %336 = insertelement <256 x float> poison, float %335, i64 0, !dbg !32
  %337 = shufflevector <256 x float> %336, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %338 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %332, <256 x float> %292), !dbg !32
  %339 = getelementptr float, ptr %94, i64 %319, !dbg !32
  %340 = load float, ptr %339, align 4, !dbg !32
  %341 = insertelement <256 x float> poison, float %340, i64 0, !dbg !32
  %342 = shufflevector <256 x float> %341, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %343 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %337, <256 x float> %297), !dbg !32
  %344 = getelementptr float, ptr %103, i64 %319, !dbg !32
  %345 = load float, ptr %344, align 4, !dbg !32
  %346 = insertelement <256 x float> poison, float %345, i64 0, !dbg !32
  %347 = shufflevector <256 x float> %346, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %348 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %342, <256 x float> %302), !dbg !32
  %349 = getelementptr float, ptr %112, i64 %319, !dbg !32
  %350 = load float, ptr %349, align 4, !dbg !32
  %351 = insertelement <256 x float> poison, float %350, i64 0, !dbg !32
  %352 = shufflevector <256 x float> %351, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %353 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %347, <256 x float> %307), !dbg !32
  %354 = getelementptr float, ptr %121, i64 %319, !dbg !32
  %355 = load float, ptr %354, align 4, !dbg !32
  %356 = insertelement <256 x float> poison, float %355, i64 0, !dbg !32
  %357 = shufflevector <256 x float> %356, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %358 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %352, <256 x float> %312), !dbg !32
  %359 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %270, <256 x float> %357, <256 x float> %313), !dbg !32
  %360 = add i64 %50, 7, !dbg !32
  %361 = mul i64 %360, %35, !dbg !32
  %gep83 = getelementptr float, ptr %invariant.gep82, i64 %361, !dbg !32
  %362 = load <256 x float>, ptr %gep83, align 4, !dbg !32
  %363 = add i64 %50, 22, !dbg !32
  %364 = mul i64 %363, %35, !dbg !32
  %gep85 = getelementptr float, ptr %invariant.gep84, i64 %364, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep85, i32 0, i32 1, i32 1), !dbg !32
  %365 = or disjoint i64 %.pn33, 6, !dbg !32
  %366 = getelementptr float, ptr %60, i64 %365, !dbg !32
  %367 = load float, ptr %366, align 4, !dbg !32
  %368 = insertelement <256 x float> poison, float %367, i64 0, !dbg !32
  %369 = shufflevector <256 x float> %368, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %370 = getelementptr float, ptr %67, i64 %365, !dbg !32
  %371 = load float, ptr %370, align 4, !dbg !32
  %372 = insertelement <256 x float> poison, float %371, i64 0, !dbg !32
  %373 = shufflevector <256 x float> %372, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %374 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %369, <256 x float> %328), !dbg !32
  %375 = getelementptr float, ptr %76, i64 %365, !dbg !32
  %376 = load float, ptr %375, align 4, !dbg !32
  %377 = insertelement <256 x float> poison, float %376, i64 0, !dbg !32
  %378 = shufflevector <256 x float> %377, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %379 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %373, <256 x float> %333), !dbg !32
  %380 = getelementptr float, ptr %85, i64 %365, !dbg !32
  %381 = load float, ptr %380, align 4, !dbg !32
  %382 = insertelement <256 x float> poison, float %381, i64 0, !dbg !32
  %383 = shufflevector <256 x float> %382, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %384 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %378, <256 x float> %338), !dbg !32
  %385 = getelementptr float, ptr %94, i64 %365, !dbg !32
  %386 = load float, ptr %385, align 4, !dbg !32
  %387 = insertelement <256 x float> poison, float %386, i64 0, !dbg !32
  %388 = shufflevector <256 x float> %387, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %389 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %383, <256 x float> %343), !dbg !32
  %390 = getelementptr float, ptr %103, i64 %365, !dbg !32
  %391 = load float, ptr %390, align 4, !dbg !32
  %392 = insertelement <256 x float> poison, float %391, i64 0, !dbg !32
  %393 = shufflevector <256 x float> %392, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %394 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %388, <256 x float> %348), !dbg !32
  %395 = getelementptr float, ptr %112, i64 %365, !dbg !32
  %396 = load float, ptr %395, align 4, !dbg !32
  %397 = insertelement <256 x float> poison, float %396, i64 0, !dbg !32
  %398 = shufflevector <256 x float> %397, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %399 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %393, <256 x float> %353), !dbg !32
  %400 = getelementptr float, ptr %121, i64 %365, !dbg !32
  %401 = load float, ptr %400, align 4, !dbg !32
  %402 = insertelement <256 x float> poison, float %401, i64 0, !dbg !32
  %403 = shufflevector <256 x float> %402, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %404 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %398, <256 x float> %358), !dbg !32
  %405 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %316, <256 x float> %403, <256 x float> %359), !dbg !32
  %406 = add i64 %50, 8, !dbg !32
  %407 = mul i64 %406, %35, !dbg !32
  %gep87 = getelementptr float, ptr %invariant.gep86, i64 %407, !dbg !32
  %408 = load <256 x float>, ptr %gep87, align 4, !dbg !32
  %409 = add i64 %50, 23, !dbg !32
  %410 = mul i64 %409, %35, !dbg !32
  %gep89 = getelementptr float, ptr %invariant.gep88, i64 %410, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep89, i32 0, i32 1, i32 1), !dbg !32
  %411 = or disjoint i64 %.pn33, 7, !dbg !32
  %412 = getelementptr float, ptr %60, i64 %411, !dbg !32
  %413 = load float, ptr %412, align 4, !dbg !32
  %414 = insertelement <256 x float> poison, float %413, i64 0, !dbg !32
  %415 = shufflevector <256 x float> %414, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %416 = getelementptr float, ptr %67, i64 %411, !dbg !32
  %417 = load float, ptr %416, align 4, !dbg !32
  %418 = insertelement <256 x float> poison, float %417, i64 0, !dbg !32
  %419 = shufflevector <256 x float> %418, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %420 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %415, <256 x float> %374), !dbg !32
  %421 = getelementptr float, ptr %76, i64 %411, !dbg !32
  %422 = load float, ptr %421, align 4, !dbg !32
  %423 = insertelement <256 x float> poison, float %422, i64 0, !dbg !32
  %424 = shufflevector <256 x float> %423, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %425 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %419, <256 x float> %379), !dbg !32
  %426 = getelementptr float, ptr %85, i64 %411, !dbg !32
  %427 = load float, ptr %426, align 4, !dbg !32
  %428 = insertelement <256 x float> poison, float %427, i64 0, !dbg !32
  %429 = shufflevector <256 x float> %428, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %430 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %424, <256 x float> %384), !dbg !32
  %431 = getelementptr float, ptr %94, i64 %411, !dbg !32
  %432 = load float, ptr %431, align 4, !dbg !32
  %433 = insertelement <256 x float> poison, float %432, i64 0, !dbg !32
  %434 = shufflevector <256 x float> %433, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %435 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %429, <256 x float> %389), !dbg !32
  %436 = getelementptr float, ptr %103, i64 %411, !dbg !32
  %437 = load float, ptr %436, align 4, !dbg !32
  %438 = insertelement <256 x float> poison, float %437, i64 0, !dbg !32
  %439 = shufflevector <256 x float> %438, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %440 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %434, <256 x float> %394), !dbg !32
  %441 = getelementptr float, ptr %112, i64 %411, !dbg !32
  %442 = load float, ptr %441, align 4, !dbg !32
  %443 = insertelement <256 x float> poison, float %442, i64 0, !dbg !32
  %444 = shufflevector <256 x float> %443, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %445 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %439, <256 x float> %399), !dbg !32
  %446 = getelementptr float, ptr %121, i64 %411, !dbg !32
  %447 = load float, ptr %446, align 4, !dbg !32
  %448 = insertelement <256 x float> poison, float %447, i64 0, !dbg !32
  %449 = shufflevector <256 x float> %448, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %450 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %444, <256 x float> %404), !dbg !32
  %451 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %362, <256 x float> %449, <256 x float> %405), !dbg !32
  %452 = add i64 %50, 9, !dbg !32
  %453 = mul i64 %452, %35, !dbg !32
  %gep91 = getelementptr float, ptr %invariant.gep90, i64 %453, !dbg !32
  %454 = load <256 x float>, ptr %gep91, align 4, !dbg !32
  %455 = add i64 %50, 24, !dbg !32
  %456 = mul i64 %455, %35, !dbg !32
  %gep93 = getelementptr float, ptr %invariant.gep92, i64 %456, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep93, i32 0, i32 1, i32 1), !dbg !32
  %457 = or disjoint i64 %.pn33, 8, !dbg !32
  %458 = getelementptr float, ptr %60, i64 %457, !dbg !32
  %459 = load float, ptr %458, align 4, !dbg !32
  %460 = insertelement <256 x float> poison, float %459, i64 0, !dbg !32
  %461 = shufflevector <256 x float> %460, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %462 = getelementptr float, ptr %67, i64 %457, !dbg !32
  %463 = load float, ptr %462, align 4, !dbg !32
  %464 = insertelement <256 x float> poison, float %463, i64 0, !dbg !32
  %465 = shufflevector <256 x float> %464, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %466 = add i64 %.pn33, 24, !dbg !32
  %467 = getelementptr float, ptr %60, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %467, i32 0, i32 3, i32 1), !dbg !32
  %468 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %461, <256 x float> %420), !dbg !32
  %469 = getelementptr float, ptr %76, i64 %457, !dbg !32
  %470 = load float, ptr %469, align 4, !dbg !32
  %471 = insertelement <256 x float> poison, float %470, i64 0, !dbg !32
  %472 = shufflevector <256 x float> %471, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %473 = getelementptr float, ptr %67, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %473, i32 0, i32 3, i32 1), !dbg !32
  %474 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %465, <256 x float> %425), !dbg !32
  %475 = getelementptr float, ptr %85, i64 %457, !dbg !32
  %476 = load float, ptr %475, align 4, !dbg !32
  %477 = insertelement <256 x float> poison, float %476, i64 0, !dbg !32
  %478 = shufflevector <256 x float> %477, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %479 = getelementptr float, ptr %76, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %479, i32 0, i32 3, i32 1), !dbg !32
  %480 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %472, <256 x float> %430), !dbg !32
  %481 = getelementptr float, ptr %94, i64 %457, !dbg !32
  %482 = load float, ptr %481, align 4, !dbg !32
  %483 = insertelement <256 x float> poison, float %482, i64 0, !dbg !32
  %484 = shufflevector <256 x float> %483, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %485 = getelementptr float, ptr %85, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %485, i32 0, i32 3, i32 1), !dbg !32
  %486 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %478, <256 x float> %435), !dbg !32
  %487 = getelementptr float, ptr %103, i64 %457, !dbg !32
  %488 = load float, ptr %487, align 4, !dbg !32
  %489 = insertelement <256 x float> poison, float %488, i64 0, !dbg !32
  %490 = shufflevector <256 x float> %489, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %491 = getelementptr float, ptr %94, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %491, i32 0, i32 3, i32 1), !dbg !32
  %492 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %484, <256 x float> %440), !dbg !32
  %493 = getelementptr float, ptr %112, i64 %457, !dbg !32
  %494 = load float, ptr %493, align 4, !dbg !32
  %495 = insertelement <256 x float> poison, float %494, i64 0, !dbg !32
  %496 = shufflevector <256 x float> %495, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %497 = getelementptr float, ptr %103, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %497, i32 0, i32 3, i32 1), !dbg !32
  %498 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %490, <256 x float> %445), !dbg !32
  %499 = getelementptr float, ptr %121, i64 %457, !dbg !32
  %500 = load float, ptr %499, align 4, !dbg !32
  %501 = insertelement <256 x float> poison, float %500, i64 0, !dbg !32
  %502 = shufflevector <256 x float> %501, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %503 = getelementptr float, ptr %112, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %503, i32 0, i32 3, i32 1), !dbg !32
  %504 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %496, <256 x float> %450), !dbg !32
  %505 = getelementptr float, ptr %121, i64 %466, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %505, i32 0, i32 3, i32 1), !dbg !32
  %506 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %408, <256 x float> %502, <256 x float> %451), !dbg !32
  %507 = add i64 %50, 10, !dbg !32
  %508 = mul i64 %507, %35, !dbg !32
  %gep95 = getelementptr float, ptr %invariant.gep94, i64 %508, !dbg !32
  %509 = load <256 x float>, ptr %gep95, align 4, !dbg !32
  %510 = add i64 %50, 25, !dbg !32
  %511 = mul i64 %510, %35, !dbg !32
  %gep97 = getelementptr float, ptr %invariant.gep96, i64 %511, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep97, i32 0, i32 1, i32 1), !dbg !32
  %512 = or disjoint i64 %.pn33, 9, !dbg !32
  %513 = getelementptr float, ptr %60, i64 %512, !dbg !32
  %514 = load float, ptr %513, align 4, !dbg !32
  %515 = insertelement <256 x float> poison, float %514, i64 0, !dbg !32
  %516 = shufflevector <256 x float> %515, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %517 = getelementptr float, ptr %67, i64 %512, !dbg !32
  %518 = load float, ptr %517, align 4, !dbg !32
  %519 = insertelement <256 x float> poison, float %518, i64 0, !dbg !32
  %520 = shufflevector <256 x float> %519, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %521 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %516, <256 x float> %468), !dbg !32
  %522 = getelementptr float, ptr %76, i64 %512, !dbg !32
  %523 = load float, ptr %522, align 4, !dbg !32
  %524 = insertelement <256 x float> poison, float %523, i64 0, !dbg !32
  %525 = shufflevector <256 x float> %524, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %526 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %520, <256 x float> %474), !dbg !32
  %527 = getelementptr float, ptr %85, i64 %512, !dbg !32
  %528 = load float, ptr %527, align 4, !dbg !32
  %529 = insertelement <256 x float> poison, float %528, i64 0, !dbg !32
  %530 = shufflevector <256 x float> %529, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %531 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %525, <256 x float> %480), !dbg !32
  %532 = getelementptr float, ptr %94, i64 %512, !dbg !32
  %533 = load float, ptr %532, align 4, !dbg !32
  %534 = insertelement <256 x float> poison, float %533, i64 0, !dbg !32
  %535 = shufflevector <256 x float> %534, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %536 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %530, <256 x float> %486), !dbg !32
  %537 = getelementptr float, ptr %103, i64 %512, !dbg !32
  %538 = load float, ptr %537, align 4, !dbg !32
  %539 = insertelement <256 x float> poison, float %538, i64 0, !dbg !32
  %540 = shufflevector <256 x float> %539, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %541 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %535, <256 x float> %492), !dbg !32
  %542 = getelementptr float, ptr %112, i64 %512, !dbg !32
  %543 = load float, ptr %542, align 4, !dbg !32
  %544 = insertelement <256 x float> poison, float %543, i64 0, !dbg !32
  %545 = shufflevector <256 x float> %544, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %546 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %540, <256 x float> %498), !dbg !32
  %547 = getelementptr float, ptr %121, i64 %512, !dbg !32
  %548 = load float, ptr %547, align 4, !dbg !32
  %549 = insertelement <256 x float> poison, float %548, i64 0, !dbg !32
  %550 = shufflevector <256 x float> %549, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %551 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %545, <256 x float> %504), !dbg !32
  %552 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %454, <256 x float> %550, <256 x float> %506), !dbg !32
  %553 = add i64 %50, 11, !dbg !32
  %554 = mul i64 %553, %35, !dbg !32
  %gep99 = getelementptr float, ptr %invariant.gep98, i64 %554, !dbg !32
  %555 = load <256 x float>, ptr %gep99, align 4, !dbg !32
  %556 = add i64 %50, 26, !dbg !32
  %557 = mul i64 %556, %35, !dbg !32
  %gep101 = getelementptr float, ptr %invariant.gep100, i64 %557, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep101, i32 0, i32 1, i32 1), !dbg !32
  %558 = or disjoint i64 %.pn33, 10, !dbg !32
  %559 = getelementptr float, ptr %60, i64 %558, !dbg !32
  %560 = load float, ptr %559, align 4, !dbg !32
  %561 = insertelement <256 x float> poison, float %560, i64 0, !dbg !32
  %562 = shufflevector <256 x float> %561, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %563 = getelementptr float, ptr %67, i64 %558, !dbg !32
  %564 = load float, ptr %563, align 4, !dbg !32
  %565 = insertelement <256 x float> poison, float %564, i64 0, !dbg !32
  %566 = shufflevector <256 x float> %565, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %567 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %562, <256 x float> %521), !dbg !32
  %568 = getelementptr float, ptr %76, i64 %558, !dbg !32
  %569 = load float, ptr %568, align 4, !dbg !32
  %570 = insertelement <256 x float> poison, float %569, i64 0, !dbg !32
  %571 = shufflevector <256 x float> %570, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %572 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %566, <256 x float> %526), !dbg !32
  %573 = getelementptr float, ptr %85, i64 %558, !dbg !32
  %574 = load float, ptr %573, align 4, !dbg !32
  %575 = insertelement <256 x float> poison, float %574, i64 0, !dbg !32
  %576 = shufflevector <256 x float> %575, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %577 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %571, <256 x float> %531), !dbg !32
  %578 = getelementptr float, ptr %94, i64 %558, !dbg !32
  %579 = load float, ptr %578, align 4, !dbg !32
  %580 = insertelement <256 x float> poison, float %579, i64 0, !dbg !32
  %581 = shufflevector <256 x float> %580, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %582 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %576, <256 x float> %536), !dbg !32
  %583 = getelementptr float, ptr %103, i64 %558, !dbg !32
  %584 = load float, ptr %583, align 4, !dbg !32
  %585 = insertelement <256 x float> poison, float %584, i64 0, !dbg !32
  %586 = shufflevector <256 x float> %585, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %587 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %581, <256 x float> %541), !dbg !32
  %588 = getelementptr float, ptr %112, i64 %558, !dbg !32
  %589 = load float, ptr %588, align 4, !dbg !32
  %590 = insertelement <256 x float> poison, float %589, i64 0, !dbg !32
  %591 = shufflevector <256 x float> %590, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %592 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %586, <256 x float> %546), !dbg !32
  %593 = getelementptr float, ptr %121, i64 %558, !dbg !32
  %594 = load float, ptr %593, align 4, !dbg !32
  %595 = insertelement <256 x float> poison, float %594, i64 0, !dbg !32
  %596 = shufflevector <256 x float> %595, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %597 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %591, <256 x float> %551), !dbg !32
  %598 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %509, <256 x float> %596, <256 x float> %552), !dbg !32
  %599 = add i64 %50, 12, !dbg !32
  %600 = mul i64 %599, %35, !dbg !32
  %gep103 = getelementptr float, ptr %invariant.gep102, i64 %600, !dbg !32
  %601 = load <256 x float>, ptr %gep103, align 4, !dbg !32
  %602 = add i64 %50, 27, !dbg !32
  %603 = mul i64 %602, %35, !dbg !32
  %gep105 = getelementptr float, ptr %invariant.gep104, i64 %603, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep105, i32 0, i32 1, i32 1), !dbg !32
  %604 = or disjoint i64 %.pn33, 11, !dbg !32
  %605 = getelementptr float, ptr %60, i64 %604, !dbg !32
  %606 = load float, ptr %605, align 4, !dbg !32
  %607 = insertelement <256 x float> poison, float %606, i64 0, !dbg !32
  %608 = shufflevector <256 x float> %607, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %609 = getelementptr float, ptr %67, i64 %604, !dbg !32
  %610 = load float, ptr %609, align 4, !dbg !32
  %611 = insertelement <256 x float> poison, float %610, i64 0, !dbg !32
  %612 = shufflevector <256 x float> %611, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %613 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %608, <256 x float> %567), !dbg !32
  %614 = getelementptr float, ptr %76, i64 %604, !dbg !32
  %615 = load float, ptr %614, align 4, !dbg !32
  %616 = insertelement <256 x float> poison, float %615, i64 0, !dbg !32
  %617 = shufflevector <256 x float> %616, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %618 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %612, <256 x float> %572), !dbg !32
  %619 = getelementptr float, ptr %85, i64 %604, !dbg !32
  %620 = load float, ptr %619, align 4, !dbg !32
  %621 = insertelement <256 x float> poison, float %620, i64 0, !dbg !32
  %622 = shufflevector <256 x float> %621, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %623 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %617, <256 x float> %577), !dbg !32
  %624 = getelementptr float, ptr %94, i64 %604, !dbg !32
  %625 = load float, ptr %624, align 4, !dbg !32
  %626 = insertelement <256 x float> poison, float %625, i64 0, !dbg !32
  %627 = shufflevector <256 x float> %626, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %628 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %622, <256 x float> %582), !dbg !32
  %629 = getelementptr float, ptr %103, i64 %604, !dbg !32
  %630 = load float, ptr %629, align 4, !dbg !32
  %631 = insertelement <256 x float> poison, float %630, i64 0, !dbg !32
  %632 = shufflevector <256 x float> %631, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %633 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %627, <256 x float> %587), !dbg !32
  %634 = getelementptr float, ptr %112, i64 %604, !dbg !32
  %635 = load float, ptr %634, align 4, !dbg !32
  %636 = insertelement <256 x float> poison, float %635, i64 0, !dbg !32
  %637 = shufflevector <256 x float> %636, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %638 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %632, <256 x float> %592), !dbg !32
  %639 = getelementptr float, ptr %121, i64 %604, !dbg !32
  %640 = load float, ptr %639, align 4, !dbg !32
  %641 = insertelement <256 x float> poison, float %640, i64 0, !dbg !32
  %642 = shufflevector <256 x float> %641, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %643 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %637, <256 x float> %597), !dbg !32
  %644 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %555, <256 x float> %642, <256 x float> %598), !dbg !32
  %645 = add i64 %50, 13, !dbg !32
  %646 = mul i64 %645, %35, !dbg !32
  %gep107 = getelementptr float, ptr %invariant.gep106, i64 %646, !dbg !32
  %647 = load <256 x float>, ptr %gep107, align 4, !dbg !32
  %648 = add i64 %50, 28, !dbg !32
  %649 = mul i64 %648, %35, !dbg !32
  %gep109 = getelementptr float, ptr %invariant.gep108, i64 %649, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep109, i32 0, i32 1, i32 1), !dbg !32
  %650 = or disjoint i64 %.pn33, 12, !dbg !32
  %651 = getelementptr float, ptr %60, i64 %650, !dbg !32
  %652 = load float, ptr %651, align 4, !dbg !32
  %653 = insertelement <256 x float> poison, float %652, i64 0, !dbg !32
  %654 = shufflevector <256 x float> %653, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %655 = getelementptr float, ptr %67, i64 %650, !dbg !32
  %656 = load float, ptr %655, align 4, !dbg !32
  %657 = insertelement <256 x float> poison, float %656, i64 0, !dbg !32
  %658 = shufflevector <256 x float> %657, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %659 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %654, <256 x float> %613), !dbg !32
  %660 = getelementptr float, ptr %76, i64 %650, !dbg !32
  %661 = load float, ptr %660, align 4, !dbg !32
  %662 = insertelement <256 x float> poison, float %661, i64 0, !dbg !32
  %663 = shufflevector <256 x float> %662, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %664 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %658, <256 x float> %618), !dbg !32
  %665 = getelementptr float, ptr %85, i64 %650, !dbg !32
  %666 = load float, ptr %665, align 4, !dbg !32
  %667 = insertelement <256 x float> poison, float %666, i64 0, !dbg !32
  %668 = shufflevector <256 x float> %667, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %669 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %663, <256 x float> %623), !dbg !32
  %670 = getelementptr float, ptr %94, i64 %650, !dbg !32
  %671 = load float, ptr %670, align 4, !dbg !32
  %672 = insertelement <256 x float> poison, float %671, i64 0, !dbg !32
  %673 = shufflevector <256 x float> %672, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %674 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %668, <256 x float> %628), !dbg !32
  %675 = getelementptr float, ptr %103, i64 %650, !dbg !32
  %676 = load float, ptr %675, align 4, !dbg !32
  %677 = insertelement <256 x float> poison, float %676, i64 0, !dbg !32
  %678 = shufflevector <256 x float> %677, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %679 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %673, <256 x float> %633), !dbg !32
  %680 = getelementptr float, ptr %112, i64 %650, !dbg !32
  %681 = load float, ptr %680, align 4, !dbg !32
  %682 = insertelement <256 x float> poison, float %681, i64 0, !dbg !32
  %683 = shufflevector <256 x float> %682, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %684 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %678, <256 x float> %638), !dbg !32
  %685 = getelementptr float, ptr %121, i64 %650, !dbg !32
  %686 = load float, ptr %685, align 4, !dbg !32
  %687 = insertelement <256 x float> poison, float %686, i64 0, !dbg !32
  %688 = shufflevector <256 x float> %687, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %689 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %683, <256 x float> %643), !dbg !32
  %690 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %601, <256 x float> %688, <256 x float> %644), !dbg !32
  %691 = add i64 %50, 14, !dbg !32
  %692 = mul i64 %691, %35, !dbg !32
  %gep111 = getelementptr float, ptr %invariant.gep110, i64 %692, !dbg !32
  %693 = load <256 x float>, ptr %gep111, align 4, !dbg !32
  %694 = add i64 %50, 29, !dbg !32
  %695 = mul i64 %694, %35, !dbg !32
  %gep113 = getelementptr float, ptr %invariant.gep112, i64 %695, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep113, i32 0, i32 1, i32 1), !dbg !32
  %696 = or disjoint i64 %.pn33, 13, !dbg !32
  %697 = getelementptr float, ptr %60, i64 %696, !dbg !32
  %698 = load float, ptr %697, align 4, !dbg !32
  %699 = insertelement <256 x float> poison, float %698, i64 0, !dbg !32
  %700 = shufflevector <256 x float> %699, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %701 = getelementptr float, ptr %67, i64 %696, !dbg !32
  %702 = load float, ptr %701, align 4, !dbg !32
  %703 = insertelement <256 x float> poison, float %702, i64 0, !dbg !32
  %704 = shufflevector <256 x float> %703, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %705 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %700, <256 x float> %659), !dbg !32
  %706 = getelementptr float, ptr %76, i64 %696, !dbg !32
  %707 = load float, ptr %706, align 4, !dbg !32
  %708 = insertelement <256 x float> poison, float %707, i64 0, !dbg !32
  %709 = shufflevector <256 x float> %708, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %710 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %704, <256 x float> %664), !dbg !32
  %711 = getelementptr float, ptr %85, i64 %696, !dbg !32
  %712 = load float, ptr %711, align 4, !dbg !32
  %713 = insertelement <256 x float> poison, float %712, i64 0, !dbg !32
  %714 = shufflevector <256 x float> %713, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %715 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %709, <256 x float> %669), !dbg !32
  %716 = getelementptr float, ptr %94, i64 %696, !dbg !32
  %717 = load float, ptr %716, align 4, !dbg !32
  %718 = insertelement <256 x float> poison, float %717, i64 0, !dbg !32
  %719 = shufflevector <256 x float> %718, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %720 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %714, <256 x float> %674), !dbg !32
  %721 = getelementptr float, ptr %103, i64 %696, !dbg !32
  %722 = load float, ptr %721, align 4, !dbg !32
  %723 = insertelement <256 x float> poison, float %722, i64 0, !dbg !32
  %724 = shufflevector <256 x float> %723, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %725 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %719, <256 x float> %679), !dbg !32
  %726 = getelementptr float, ptr %112, i64 %696, !dbg !32
  %727 = load float, ptr %726, align 4, !dbg !32
  %728 = insertelement <256 x float> poison, float %727, i64 0, !dbg !32
  %729 = shufflevector <256 x float> %728, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %730 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %724, <256 x float> %684), !dbg !32
  %731 = getelementptr float, ptr %121, i64 %696, !dbg !32
  %732 = load float, ptr %731, align 4, !dbg !32
  %733 = insertelement <256 x float> poison, float %732, i64 0, !dbg !32
  %734 = shufflevector <256 x float> %733, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %735 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %729, <256 x float> %689), !dbg !32
  %736 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %647, <256 x float> %734, <256 x float> %690), !dbg !32
  %737 = add i64 %50, 15, !dbg !32
  %738 = mul i64 %737, %35, !dbg !32
  %gep115 = getelementptr float, ptr %invariant.gep114, i64 %738, !dbg !32
  %739 = load <256 x float>, ptr %gep115, align 4, !dbg !32
  %740 = add i64 %50, 30, !dbg !32
  %741 = mul i64 %740, %35, !dbg !32
  %gep117 = getelementptr float, ptr %invariant.gep116, i64 %741, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep117, i32 0, i32 1, i32 1), !dbg !32
  %742 = or disjoint i64 %.pn33, 14, !dbg !32
  %743 = getelementptr float, ptr %60, i64 %742, !dbg !32
  %744 = load float, ptr %743, align 4, !dbg !32
  %745 = insertelement <256 x float> poison, float %744, i64 0, !dbg !32
  %746 = shufflevector <256 x float> %745, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %747 = getelementptr float, ptr %67, i64 %742, !dbg !32
  %748 = load float, ptr %747, align 4, !dbg !32
  %749 = insertelement <256 x float> poison, float %748, i64 0, !dbg !32
  %750 = shufflevector <256 x float> %749, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %751 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %746, <256 x float> %705), !dbg !32
  %752 = getelementptr float, ptr %76, i64 %742, !dbg !32
  %753 = load float, ptr %752, align 4, !dbg !32
  %754 = insertelement <256 x float> poison, float %753, i64 0, !dbg !32
  %755 = shufflevector <256 x float> %754, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %756 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %750, <256 x float> %710), !dbg !32
  %757 = getelementptr float, ptr %85, i64 %742, !dbg !32
  %758 = load float, ptr %757, align 4, !dbg !32
  %759 = insertelement <256 x float> poison, float %758, i64 0, !dbg !32
  %760 = shufflevector <256 x float> %759, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %761 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %755, <256 x float> %715), !dbg !32
  %762 = getelementptr float, ptr %94, i64 %742, !dbg !32
  %763 = load float, ptr %762, align 4, !dbg !32
  %764 = insertelement <256 x float> poison, float %763, i64 0, !dbg !32
  %765 = shufflevector <256 x float> %764, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %766 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %760, <256 x float> %720), !dbg !32
  %767 = getelementptr float, ptr %103, i64 %742, !dbg !32
  %768 = load float, ptr %767, align 4, !dbg !32
  %769 = insertelement <256 x float> poison, float %768, i64 0, !dbg !32
  %770 = shufflevector <256 x float> %769, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %771 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %765, <256 x float> %725), !dbg !32
  %772 = getelementptr float, ptr %112, i64 %742, !dbg !32
  %773 = load float, ptr %772, align 4, !dbg !32
  %774 = insertelement <256 x float> poison, float %773, i64 0, !dbg !32
  %775 = shufflevector <256 x float> %774, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %776 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %770, <256 x float> %730), !dbg !32
  %777 = getelementptr float, ptr %121, i64 %742, !dbg !32
  %778 = load float, ptr %777, align 4, !dbg !32
  %779 = insertelement <256 x float> poison, float %778, i64 0, !dbg !32
  %780 = shufflevector <256 x float> %779, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %781 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %775, <256 x float> %735), !dbg !32
  %782 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %693, <256 x float> %780, <256 x float> %736), !dbg !32
  %783 = add i64 %50, 31, !dbg !32
  %784 = mul i64 %783, %35, !dbg !32
  %gep119 = getelementptr float, ptr %invariant.gep118, i64 %784, !dbg !32
  tail call void @llvm.prefetch.p0(ptr %gep119, i32 0, i32 1, i32 1), !dbg !32
  %785 = or disjoint i64 %.pn33, 15, !dbg !32
  %786 = getelementptr float, ptr %60, i64 %785, !dbg !32
  %787 = load float, ptr %786, align 4, !dbg !32
  %788 = insertelement <256 x float> poison, float %787, i64 0, !dbg !32
  %789 = shufflevector <256 x float> %788, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %790 = getelementptr float, ptr %67, i64 %785, !dbg !32
  %791 = load float, ptr %790, align 4, !dbg !32
  %792 = insertelement <256 x float> poison, float %791, i64 0, !dbg !32
  %793 = shufflevector <256 x float> %792, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %794 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %789, <256 x float> %751), !dbg !32
  %795 = getelementptr float, ptr %76, i64 %785, !dbg !32
  %796 = load float, ptr %795, align 4, !dbg !32
  %797 = insertelement <256 x float> poison, float %796, i64 0, !dbg !32
  %798 = shufflevector <256 x float> %797, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %799 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %793, <256 x float> %756), !dbg !32
  %800 = getelementptr float, ptr %85, i64 %785, !dbg !32
  %801 = load float, ptr %800, align 4, !dbg !32
  %802 = insertelement <256 x float> poison, float %801, i64 0, !dbg !32
  %803 = shufflevector <256 x float> %802, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %804 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %798, <256 x float> %761), !dbg !32
  %805 = getelementptr float, ptr %94, i64 %785, !dbg !32
  %806 = load float, ptr %805, align 4, !dbg !32
  %807 = insertelement <256 x float> poison, float %806, i64 0, !dbg !32
  %808 = shufflevector <256 x float> %807, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %809 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %803, <256 x float> %766), !dbg !32
  %810 = getelementptr float, ptr %103, i64 %785, !dbg !32
  %811 = load float, ptr %810, align 4, !dbg !32
  %812 = insertelement <256 x float> poison, float %811, i64 0, !dbg !32
  %813 = shufflevector <256 x float> %812, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %814 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %808, <256 x float> %771), !dbg !32
  %815 = getelementptr float, ptr %112, i64 %785, !dbg !32
  %816 = load float, ptr %815, align 4, !dbg !32
  %817 = insertelement <256 x float> poison, float %816, i64 0, !dbg !32
  %818 = shufflevector <256 x float> %817, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %819 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %813, <256 x float> %776), !dbg !32
  %820 = getelementptr float, ptr %121, i64 %785, !dbg !32
  %821 = load float, ptr %820, align 4, !dbg !32
  %822 = insertelement <256 x float> poison, float %821, i64 0, !dbg !32
  %823 = shufflevector <256 x float> %822, <256 x float> poison, <256 x i32> zeroinitializer, !dbg !32
  %824 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %818, <256 x float> %781), !dbg !32
  %825 = tail call <256 x float> @llvm.fmuladd.v256f32(<256 x float> %739, <256 x float> %823, <256 x float> %782), !dbg !32
  %826 = add nuw nsw i32 %46, 1, !dbg !29
  %exitcond.not = icmp eq i32 %826, %33, !dbg !29
  %827 = insertvalue [2 x i64] %48, i64 %52, 0, !dbg !29
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !dbg !29

._crit_edge:                                      ; preds = %.lr.ph, %15
  %.lcssa7 = phi <256 x float> [ zeroinitializer, %15 ], [ %794, %.lr.ph ]
  %.lcssa6 = phi <256 x float> [ zeroinitializer, %15 ], [ %799, %.lr.ph ]
  %.lcssa5 = phi <256 x float> [ zeroinitializer, %15 ], [ %804, %.lr.ph ]
  %.lcssa4 = phi <256 x float> [ zeroinitializer, %15 ], [ %809, %.lr.ph ]
  %.lcssa3 = phi <256 x float> [ zeroinitializer, %15 ], [ %814, %.lr.ph ]
  %.lcssa2 = phi <256 x float> [ zeroinitializer, %15 ], [ %819, %.lr.ph ]
  %.lcssa1 = phi <256 x float> [ zeroinitializer, %15 ], [ %824, %.lr.ph ]
  %.lcssa = phi <256 x float> [ zeroinitializer, %15 ], [ %825, %.lr.ph ]
  %828 = sext i32 %8 to i64, !dbg !33
  %829 = mul nsw i64 %31, %828, !dbg !34
  %830 = getelementptr float, ptr %2, i64 %829, !dbg !34
  %831 = getelementptr float, ptr %830, i64 %32, !dbg !34
  store <256 x float> %.lcssa7, ptr %831, align 4, !dbg !34
  %832 = or disjoint i64 %31, 1, !dbg !34
  %833 = mul nsw i64 %832, %828, !dbg !34
  %834 = getelementptr float, ptr %2, i64 %833, !dbg !34
  %835 = getelementptr float, ptr %834, i64 %32, !dbg !34
  store <256 x float> %.lcssa6, ptr %835, align 4, !dbg !34
  %836 = or disjoint i64 %31, 2, !dbg !34
  %837 = mul nsw i64 %836, %828, !dbg !34
  %838 = getelementptr float, ptr %2, i64 %837, !dbg !34
  %839 = getelementptr float, ptr %838, i64 %32, !dbg !34
  store <256 x float> %.lcssa5, ptr %839, align 4, !dbg !34
  %840 = or disjoint i64 %31, 3, !dbg !34
  %841 = mul nsw i64 %840, %828, !dbg !34
  %842 = getelementptr float, ptr %2, i64 %841, !dbg !34
  %843 = getelementptr float, ptr %842, i64 %32, !dbg !34
  store <256 x float> %.lcssa4, ptr %843, align 4, !dbg !34
  %844 = or disjoint i64 %31, 4, !dbg !34
  %845 = mul nsw i64 %844, %828, !dbg !34
  %846 = getelementptr float, ptr %2, i64 %845, !dbg !34
  %847 = getelementptr float, ptr %846, i64 %32, !dbg !34
  store <256 x float> %.lcssa3, ptr %847, align 4, !dbg !34
  %848 = or disjoint i64 %31, 5, !dbg !34
  %849 = mul nsw i64 %848, %828, !dbg !34
  %850 = getelementptr float, ptr %2, i64 %849, !dbg !34
  %851 = getelementptr float, ptr %850, i64 %32, !dbg !34
  store <256 x float> %.lcssa2, ptr %851, align 4, !dbg !34
  %852 = or disjoint i64 %31, 6, !dbg !34
  %853 = mul nsw i64 %852, %828, !dbg !34
  %854 = getelementptr float, ptr %2, i64 %853, !dbg !34
  %855 = getelementptr float, ptr %854, i64 %32, !dbg !34
  store <256 x float> %.lcssa1, ptr %855, align 4, !dbg !34
  %856 = or disjoint i64 %31, 7, !dbg !34
  %857 = mul nsw i64 %856, %828, !dbg !34
  %858 = getelementptr float, ptr %2, i64 %857, !dbg !34
  %859 = getelementptr float, ptr %858, i64 %32, !dbg !34
  store <256 x float> %.lcssa, ptr %859, align 4, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @llvm.prefetch.p0(ptr readonly captures(none), i32 immarg, i32 immarg, i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <256 x float> @llvm.fmuladd.v256f32(<256 x float>, <256 x float>, <256 x float>) #1

attributes #0 = { nofree norecurse nosync nounwind }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "matmul.py", directory: "/home/yuhao/T_RVV/benchmark/src/triton")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "matmul_kernel", linkageName: "matmul_kernel", scope: !1, file: !1, line: 24, type: !4, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!4 = !DISubroutineType(cc: DW_CC_normal, types: !5)
!5 = !{}
!6 = !DILocation(line: 40, column: 22, scope: !7, inlinedAt: !9)
!7 = distinct !DILexicalBlockFile(scope: !3, file: !8, discriminator: 0)
!8 = !DIFile(filename: "standard.py", directory: "/home/yuhao/triton-cpu/python/triton/language")
!9 = !DILocation(line: 46, column: 27, scope: !3)
!10 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !9)
!11 = !DILocation(line: 40, column: 22, scope: !7, inlinedAt: !12)
!12 = !DILocation(line: 47, column: 27, scope: !3)
!13 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !12)
!14 = !DILocation(line: 48, column: 38, scope: !3)
!15 = !DILocation(line: 49, column: 22, scope: !3)
!16 = !DILocation(line: 50, column: 29, scope: !3)
!17 = !DILocation(line: 51, column: 35, scope: !3)
!18 = !DILocation(line: 51, column: 48, scope: !3)
!19 = !DILocation(line: 52, column: 33, scope: !3)
!20 = !DILocation(line: 52, column: 27, scope: !3)
!21 = !DILocation(line: 53, column: 19, scope: !3)
!22 = !DILocation(line: 53, column: 40, scope: !3)
!23 = !DILocation(line: 63, column: 33, scope: !3)
!24 = !DILocation(line: 64, column: 33, scope: !3)
!25 = !DILocation(line: 67, column: 39, scope: !3)
!26 = !DILocation(line: 70, column: 39, scope: !3)
!27 = !DILocation(line: 40, column: 28, scope: !7, inlinedAt: !28)
!28 = !DILocation(line: 79, column: 33, scope: !3)
!29 = !DILocation(line: 79, column: 22, scope: !3)
!30 = !DILocation(line: 83, column: 20, scope: !3)
!31 = !DILocation(line: 84, column: 20, scope: !3)
!32 = !DILocation(line: 86, column: 35, scope: !3)
!33 = !DILocation(line: 102, column: 81, scope: !3)
!34 = !DILocation(line: 103, column: 29, scope: !3)
!35 = !DILocation(line: 99, column: 4, scope: !3)
